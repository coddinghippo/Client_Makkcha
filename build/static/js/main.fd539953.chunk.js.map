{"version":3,"sources":["config/keys.js","Styles/global_styles.js","api/data_handler.js","api/index.js","Styles/_mixin.js","Components/common/index.js","Components/AddressForm.jsx","Components/TaxiCard.jsx","Components/SubwayCard.jsx","Components/BusNSubWayCard.jsx","Components/OptinList.jsx","Components/StationCard.jsx","Components/MakchaDetail.jsx","Components/DefaultOption.jsx","Components/Main.jsx","Routes/Landing.jsx","Routes/Feedback.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","KakaoAK","GlobalStyle","createGlobalStyle","_templateObject","reset","dataHandler","data","sub","busNSub","busAndSubwayPathOptionList","busPathOptionList","taxiInfo","subwayPathOptionList","console","log","defaultSub","routeList","taxi","subOnly","subOnlyList","lineList","routes","sort","a","b","totalTime","minTime","transferNum","minTransferNum","temp","push","map","eachRoute","idx","distance","price","pathList","runTime","pathItem","path","type","line","name","duration","color","displayCode","concat","Object","toConsumableArray","stations","lineName","lineColor","objectSpread","handleSub","handleBusNSub","bus","Uid","uuidv1","localStorage","setItem","api","axios","create","baseURL","headers","kakaoApi","Authorization","keys","makchaApi","getData","_ref","startX","startY","endX","endY","get","getPosFromGPS","x","y","getPosFromAddr","addr","getPosFromKeyword","keyword","postFeedback","formData","post","sizes","fontSize","smallFontSize","normalFontSize","largeFontSize","extraLargeFontSize","superLargeFontSize","lineColors","도보","1","2","3","4","5","6","7","8","9","kyeongkang","kyung","chun","kong","bun","서해선","suin","sinbun","yongin","우이신설경전철","경전철의정부","in","in2","customMediaQuery","maxWidth","Text","styled","p","common_templateObject","props","size","weight","lineHeight","Card","div","_templateObject2","BarContainer","_templateObject3","Bar","_templateObject4","TextContainer","_templateObject5","Container","_templateObject6","Item","Form","DefaultContainer","AddressForm_templateObject","StyledForm","AddressForm_templateObject2","background","AddressForm_templateObject3","StyledItem","AddressForm_templateObject4","StyledInput","Input","AddressForm_templateObject5","ButtonContainer","AddressForm_templateObject6","StyledButton","Button","_templateObject7","AddressForm","handleSubmit","e","preventDefault","_this","form","validateFields","err","values","getPos","address","this","searchVal","Promise","race","resolve","then","res","documents","length","result","endLocation","address_name","JSON","stringify","toggleComponent","_this$props$form","getFieldDecorator","getFieldError","addressError","isFieldTouched","react_default","createElement","AddressForm_Container","validateStatus","help","rules","required","message","placeholder","onPressEnter","onClick","Component","TaxiCard","time","toFixed","String","Math","floor","style","width","backgroundColor","SubwayCard","lastTime","slice","marginBottom","item","Number","className","key","renderVehicleBar","marginTop","icon","renderVehicleIcon","BusNSubwayCard","total","routeType","OptinList_templateObject","Option","OptinList_templateObject2","OptinList_templateObject3","InfoContainer","StationCard_templateObject","IconContainer","StationCard_templateObject2","LineIcon","StationCard_templateObject3","LineInner","StationCard_templateObject4","StationInfo","StationCard_templateObject5","StationCard","endStationName","startStationName","Countdown","Statistic","MakchaDetail_templateObject","LocContainer","MakchaDetail_templateObject2","TimerContainer","MakchaDetail_templateObject3","StationCardContainer","MakchaDetail_templateObject4","CountdownContainer","MakchaDetail_templateObject5","VerticalLine","MakchaDetail_templateObject6","MakchaDetail_templateObject7","NowButton","_templateObject8","MakchaDetail","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","remain","prevProps","prevState","_this$props","setState","_this$state","deadline","Date","now","startStation","displayName","endStation","Fragment","es_icon","theme","marginRight","Components_StationCard","value","onFinish","valueStyle","format","MakchaDetail_StyledButton","shape","onButtonPress","MakchaDetail_Container","renderDetail","Timeline","DefaultOption_templateObject","TimelineContainer","DefaultOption_templateObject2","DefaultOption_templateObject3","DefaultOption_templateObject4","DefaultOption","_routes$","Components_SubwayCard","route","DefaultOption_Item","dot","DefaultOption_LineIcon","DefaultOption_LineInner","stationName","renderSubwayRoutes","timeline","renderTimeline","ContentContainer","Main_templateObject","MakchaContainer","Main_templateObject2","SpinContainer","Main_templateObject3","Main_templateObject4","antIcon","spin","Main","currentPos","_this2","getItem","_JSON$parse$endLocati","parse","navigator","geolocation","getCurrentPosition","pos","_pos$coords","coords","latitude","longitude","_this$state$currentPo","getCurrentPosFromGPS","_this3","_this$state$currentPo2","_dataHandler","_this4","MakchaDetail_MakchaDetail","bind","Components_DefaultOption","indicator","Main_StyledButton","renderMain","Landing","component","Components_AddressForm","Main_Main","TextArea","Textcontainer","Feedback_templateObject","FeedbackContainer","Feedback_templateObject2","Feedback_templateObject3","StyledTextArea","Feedback_templateObject4","Feedback_templateObject5","Feedback","FormData","append","feedback","Feedback_StyledForm","autosize","minRows","maxRows","border","borderBottom","Feedback_ButtonContainer","es_button","block","react_router_dom","to","AppContainer","App_templateObject","App","react_router","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fd539953.chunk.js","sourcesContent":["module.exports = {\n  KakaoAK: \"608b513f89e46075473ef312d8ea7a39\"\n};\n","import reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n${reset};\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.6/antd.min.css\");\n\n* {\n    box-sizing: border-box;\n}\nhtml {\n  font-size: 16px;\n}\n\nbody{\n  font-family: 'Nanum Gothic', sans-serif;\n}\n\n#root{\n  width: 100%;\n  height: 100%;\n}\n\na{\n  color: unset;\n  &:hover{\n    color: unset;\n  }\n}\n\nstrong{\n  font-weight: 700;\n}\n\nbutton{\n  cursor: pointer;\n  background-color: white;\n  outline: none;\n  border: none;\n  &:active {\n    outline: none;\n    border: none;\n  }\n}\n`;\n","const busLines = {};\n\nexport const dataHandler = data => {\n  const {\n    busAndSubwayPathOptionList,\n    busPathOptionList,\n    taxiInfo,\n    subwayPathOptionList\n  } = data;\n\n  console.log(data);\n\n  // if (subwayPathOptionList) {\n  let sub, busNSub, bus;\n  const defaultSub = subwayPathOptionList\n    ? subwayPathOptionList.routeList[0]\n    : null;\n  const taxi = taxiInfo;\n\n  function handleSub() {\n    sub = subwayPathOptionList;\n    const { routeList } = sub;\n    let subOnly = { subOnlyList: [], lineList: [] };\n\n    if (routeList) {\n      let routes = [];\n      routeList.sort((a, b) => a.totalTime - b.totalTime);\n      let minTime = routeList[0];\n      routeList.sort((a, b) => a.transferNum - b.transferNum);\n      let minTransferNum = routeList[0];\n\n      let temp = [];\n      if (minTime !== minTransferNum) temp.push(minTime);\n      temp.push(minTransferNum);\n\n      temp.map((eachRoute, idx) => {\n        const { distance, price, totalTime, pathList } = eachRoute;\n        // const route = [];\n        const runTime = [];\n        pathList.map(pathItem => {\n          let path = {};\n\n          switch (pathItem.type) {\n            case \"BUS\":\n              // BUS HANDLING\n              path = {};\n              path[\"icon\"] = \"fas fa-bus\";\n              path[\"lines\"] = pathItem.routes.map(line => line.name);\n              path[\"type\"] = pathItem.routes[0].name;\n              path[\"time\"] = pathItem.duration;\n              path[\"color\"] = pathItem.routes[0].type.color;\n              return runTime.push(path);\n            case \"SUBWAY\":\n              // SUBWAY HANDLING\n              path = {};\n              path[\"icon\"] = \"fas fa-train\";\n              path[\"stationName\"] = pathItem.displayCode;\n              path[\"lines\"] = pathItem.routes.map(line => line.name);\n              path[\"time\"] = pathItem.duration;\n              path[\"type\"] = pathItem.routes[0].name;\n              path[\"color\"] = pathItem.routes[0].type.color;\n              if (idx == 0) {\n                subOnly = {\n                  subOnlyList: [...subOnly.subOnlyList, ...pathItem.stations],\n                  lineList: [\n                    ...subOnly.lineList,\n                    { lineName: path[\"type\"], lineColor: path[\"color\"] }\n                  ]\n                };\n              }\n              return runTime.push(path);\n            default:\n              path = { type: \"도보\" };\n              path[\"icon\"] = \"fas fa-walking\";\n              path[\"time\"] = pathItem.duration;\n              path[\"color\"] = \"#ccc\";\n              return runTime.push(path);\n            // WALKING HANDLING\n          }\n        });\n        // route.map(item => runTime.push({ type: item.type, time: item.time }));\n        routes.push({ distance, price, totalTime, runTime });\n      });\n      sub = { ...subwayPathOptionList, routes, subOnly };\n      console.log(\"sub\");\n      console.log(sub);\n    }\n  }\n\n  function handleBusNSub() {\n    busNSub = busAndSubwayPathOptionList;\n    const { routeList } = busNSub;\n    if (routeList) {\n      let routes = [];\n      routeList.sort((a, b) => a.totalTime - b.totalTime);\n      let minTime = routeList[0];\n      routeList.sort((a, b) => a.transferNum - b.transferNum);\n      let minTransferNum = routeList[0];\n\n      let temp = [];\n      if (minTime !== minTransferNum) temp.push(minTime);\n      temp.push(minTransferNum);\n\n      temp.map((eachRoute, idx) => {\n        const { distance, price, totalTime, pathList } = eachRoute;\n        // const route = [];\n        const runTime = [];\n        pathList.map(pathItem => {\n          let path = {};\n\n          switch (pathItem.type) {\n            case \"BUS\":\n              // BUS HANDLING\n              path = {};\n              path[\"icon\"] = \"fas fa-bus\";\n              path[\"lines\"] = pathItem.routes.map(line => line.name);\n              path[\"type\"] = pathItem.routes[0].name;\n              path[\"time\"] = pathItem.duration;\n              path[\"color\"] = pathItem.routes[0].type.color;\n              return runTime.push(path);\n            case \"SUBWAY\":\n              // SUBWAY HANDLING\n              path = {};\n              path[\"icon\"] = \"fas fa-train\";\n              path[\"lines\"] = pathItem.routes.map(line => line.name);\n              path[\"time\"] = pathItem.duration;\n              path[\"type\"] = pathItem.routes[0].name;\n              path[\"color\"] = pathItem.routes[0].type.color;\n              return runTime.push(path);\n            default:\n              path = { type: \"도보\" };\n              path[\"icon\"] = \"fas fa-walking\";\n              path[\"time\"] = pathItem.duration;\n              path[\"color\"] = \"#ccc\";\n              return runTime.push(path);\n            // WALKING HANDLING\n          }\n        });\n        // route.map(item => runTime.push({ type: item.type, time: item.time }));\n        routes.push({ distance, price, totalTime, runTime });\n      });\n      busNSub = { ...busAndSubwayPathOptionList, routes };\n      // console.log(busNSub);\n    }\n  }\n\n  function handleBus() {\n    bus = busPathOptionList;\n  }\n\n  function main() {\n    handleSub();\n    handleBusNSub();\n    handleBus();\n  }\n\n  main();\n  return { taxi, sub, busNSub, bus, defaultSub };\n  // } else return null;\n};\n","import axios from \"axios\";\nimport keys from \"../config/keys\";\nimport uuidv1 from \"uuid/v1\";\nimport { dataHandler } from \"./data_handler\";\n\nlet apiURL = \"https://api.makkcha.com/\";\n\nconst Uid = uuidv1();\nlocalStorage.setItem(\"Uid\", Uid);\n\nconst api = axios.create({\n  baseURL: apiURL,\n  headers: { Uid }\n});\n\nconst kakaoApi = axios.create({\n  baseURL: \"https://dapi.kakao.com/v2/local/\",\n  headers: { Authorization: `KakaoAK ${keys.KakaoAK}` }\n});\n\nexport const makchaApi = {\n  getData: ({ startX, startY, endX, endY }) =>\n    api.get(\n      `searchMakcha?startX=${startX}&startY=${startY}&endX=${endX}&endY=${endY}`\n    ),\n  getPosFromGPS: (x, y) =>\n    kakaoApi.get(`geo/coord2address.json?x=${x}&y=${y}&input_coord=WGS84`),\n  getPosFromAddr: addr => kakaoApi.get(`search/address.json?query=${addr}`),\n  getPosFromKeyword: keyword =>\n    kakaoApi.get(`search/keyword.json?query=${keyword}`),\n  postFeedback: formData => api.post(\"/feedback\", formData)\n};\n\nexport { dataHandler };\n","// sizes for media queries\nconst sizes = {\n  desktop: 922,\n  tablet: 768,\n  phone: 576\n};\n\nexport const fontSize = {\n  smallFontSize: \"0.7rem\",\n  normalFontSize: \"1rem\",\n  largeFontSize: \"1.2rem\",\n  extraLargeFontSize: \"2rem\",\n  superLargeFontSize: \"3rem\"\n};\n\nexport const lineColors = {\n  도보: \"#ccc\",\n  \"1\": \"#052f93\",\n  \"2\": \"#10a643\",\n  \"3\": \"#ea8406\",\n  \"4\": \"#00a8e6\",\n  \"5\": \"#a95094\",\n  \"6\": \"#d08d1a\",\n  \"7\": \"#657931\",\n  \"8\": \"#e74e6d\",\n  \"9\": \"#be941c\",\n  kyeongkang: \"#004ea7\",\n  kyung: \"#79c0a0\",\n  chun: \"#33C7A7\",\n  kong: \"#038fa0\",\n  bun: \"#fcd204\",\n  서해선: \"#8be800\",\n  suin: \"#fbb901\",\n  sinbun: \"#cd2234\",\n  yongin: \"#56ab32\",\n  우이신설경전철: \"#b7b7b7\",\n  경전철의정부: \"#f6ba02\",\n  in: \"#6496df\",\n  in2: \"#fd9800\"\n};\n\nexport const lineChar = {\n  \"1\": \"1\",\n  \"2\": \"2\",\n  \"3\": \"3\",\n  \"4\": \"4\",\n  \"5\": \"5\",\n  \"6\": \"6\",\n  \"7\": \"7\",\n  \"8\": \"8\",\n  \"9\": \"9\",\n  kyeongkang: \"경강\",\n  kyung: \"중앙\",\n  chun: \"경춘\",\n  kong: \"공항\",\n  bun: \"분\",\n  서해선: \"서해\",\n  suin: \"수인\",\n  sinbun: \"신분\",\n  yongin: \"용인\",\n  우이신설경전철: \"우이\",\n  경전철의정부: \"의정\",\n  in: \"인1\",\n  in2: \"인2\",\n  도보: \"도보\"\n};\n\nexport const headerHeight = \"3rem\";\n\nexport const color = { bgColor: \"#141414\", fontColor: \"#000\" };\n\nconst customMediaQuery = maxWidth => `@media (max-width: ${maxWidth}px)`;\n\nexport const media = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(sizes.desktop),\n  tablet: customMediaQuery(sizes.tablet),\n  phone: customMediaQuery(sizes.phone)\n};\n","import styled from \"styled-components\";\nimport { fontSize } from \"../../Styles/_mixin\";\n\nexport const Text = styled.p`\n  font-size: ${props => fontSize[props.size] || fontSize.normalFontSize};\n  font-weight: ${props => props.weight};\n  line-height: ${props => props.lineHeight || \"1rem\"};\n`;\n\nexport const Card = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const BarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n  width: 90%;\n  max-width: 90%;\n`;\n\nexport const Bar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.8rem;\n  height: 1.2rem;\n  &:first-of-type {\n    border-top-left-radius: 3rem;\n    border-bottom-left-radius: 3rem;\n  }\n  &:last-of-type {\n    border-top-right-radius: 3rem;\n    border-bottom-right-radius: 3rem;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  width: 90%;\n  margin: 1rem 0;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { makchaApi } from \"../api\";\nimport { fontSize } from \"../Styles/_mixin\";\nimport { Container as DefaultContainer } from \"./common\";\n\nconst { Item } = Form;\n\nconst Container = styled(DefaultContainer)`\n  background: #000033;\n  // justify-content: center;\n  // align-items: center;\n  &.slick-slide {\n    text-align: center;\n    height: 160px;\n    line-height: 160px;\n    background: #000033;\n    overflow: hidden;\n  }\n\n  & h3 {\n    color: #fff;\n  }t\n`;\n\nconst Test = styled.div`\n  height: 160px;\n  width: 100%;\n  background: ${props => props.background};\n  overflow: hidden;\n  text-align: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledItem = styled(Item)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  border: none;\n  background: #000033;\n  text-align: center;\n  color: white;\n  border-bottom: 1px solid white;\n  &#address_address {\n    border-bottom: 1px solid white;\n  }\n  transition: none;\n  border-radius: 0;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  postion: absolute;\n  bottom: 0;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nclass AddressForm extends Component {\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  getPos(searchVal) {\n    function posFromAddr() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromAddr(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    function posFromKeyword() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromKeyword(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    Promise.race([posFromAddr(), posFromKeyword()])\n      .then(result => {\n        const endLocation = { endX: result[0].x, endY: result[0].y };\n        const addr = result[0].address_name;\n        localStorage.setItem(\"loc\", JSON.stringify({ endLocation, addr }));\n      })\n      .then(this.props.toggleComponent);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.getPos(values.address);\n      } else console.log(err);\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const addressError = isFieldTouched(\"address\") && getFieldError(\"address\");\n\n    return (\n      <Container>\n        <StyledForm>\n          <StyledItem\n            validateStatus={addressError ? \"error\" : \"\"}\n            help={addressError || \"\"}\n          >\n            {getFieldDecorator(\"address\", {\n              rules: [\n                { required: false, message: \"집 근처 역을 입력해 주세요!\" }\n              ]\n            })(\n              <StyledInput\n                placeholder=\"집 근처 역을 입력해 주세요\"\n                onPressEnter={this.handleSubmit}\n              />\n            )}\n          </StyledItem>\n        </StyledForm>\n        <ButtonContainer>\n          <StyledButton type=\"secondary\" onClick={this.handleSubmit}>\n            확인\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Form.create({ name: \"address\" })(AddressForm);\n","import React from \"react\";\nimport { Card, Text, BarContainer, Bar, TextContainer } from \"./common\";\n\nconst TaxiCard = props => {\n  const { taxi } = props;\n\n  return (\n    <Card>\n      <TextContainer>\n        <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"2rem\">\n          택시\n        </Text>\n        <Text>\n          {taxi.time}분 소요 | {(taxi.distance / 1000).toFixed(1)}km | 약{\" \"}\n          {String(Math.floor(taxi.price / 1000)) +\n            \",\" +\n            String(taxi.price % 1000)}\n          원\n        </Text>\n      </TextContainer>\n      <BarContainer>\n        <Bar\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#ffd300\",\n            color: \"white\"\n          }}\n        >\n          {taxi.time}분\n        </Bar>\n      </BarContainer>\n    </Card>\n  );\n};\n\nexport default TaxiCard;\n","import React from \"react\";\nimport uuidv1 from \"uuid/v1\";\nimport { lineColors } from \"../Styles/_mixin\";\nimport { Card, Text, BarContainer, Bar, TextContainer } from \"./common\";\n\nconst SubwayCard = props => {\n  const { totalTime, price, runTime, lastTime } = props;\n  console.log(\"props\");\n  console.log(props);\n\n  // Render SubwayBar for each route\n  const renderVehicleBar = (totalTime, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / totalTime) * 100);\n      if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length,\n            backgroundColor: item.color,\n            color: \"white\"\n          }}\n        >\n          {item.time}분\n        </Bar>\n      );\n    });\n  };\n\n  const renderVehicleIcon = (totalTime, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / totalTime) * 100);\n      let icon = \"fas fa-train\";\n      if (length < 24) length = 24;\n\n      length = String(length) + \"%\";\n      if (item.type === \"도보\") icon = \"fas fa-walking\";\n\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length\n          }}\n        >\n          <i\n            className={icon}\n            style={{ color: lineColors[item.type], fontSize: \"0.8rem\" }}\n          >\n            {\" \"}\n            {item.type === \"도보\" ? null : item.type}\n          </i>\n        </Bar>\n      );\n    });\n  };\n\n  return (\n    <Card>\n      <TextContainer>\n        <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"2rem\">\n          지하철\n        </Text>\n        <Text weight=\"normal\">\n          <span>막차 {lastTime.slice(0, 5)}</span> | {totalTime}분 소요\n          {/* {String(Math.floor(price / 1000)) + \",\" + String(price % 1000)}원 |\n          도보? */}\n        </Text>\n      </TextContainer>\n      <BarContainer style={{ marginBottom: 0 }}>\n        {renderVehicleBar(totalTime, runTime)}\n      </BarContainer>\n      <BarContainer style={{ marginTop: \"0.5rem\" }}>\n        {renderVehicleIcon(totalTime, runTime)}\n      </BarContainer>\n    </Card>\n  );\n};\n\nexport default SubwayCard;\n","import React from \"react\";\nimport uuidv1 from \"uuid/v1\";\nimport { Card, Text, BarContainer, Bar, TextContainer } from \"./common\";\n\nconst BusNSubwayCard = props => {\n  const { price, runTime, total, routeType } = props;\n\n  // Render SubwayBar for each route\n  console.log(props);\n  const renderVehicleBar = (total, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / total) * 100);\n      if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length,\n            backgroundColor: item.color,\n            color: \"white\"\n          }}\n        >\n          {Math.floor(Number(item.time))}분\n        </Bar>\n      );\n    });\n  };\n\n  const renderVehicleIcon = (total, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / total) * 100);\n      if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length\n          }}\n        >\n          <i\n            className={item.icon}\n            style={{ color: item.color, fontSize: \"0.8rem\" }}\n          >\n            {\" \"}\n            {item.type === \"도보\" ? null : item.type}\n          </i>\n        </Bar>\n      );\n    });\n  };\n\n  return (\n    <Card>\n      <TextContainer>\n        <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"2rem\">\n          버스 + 지하철\n        </Text>\n        <Text weight=\"normal\">\n          {Math.floor(total)}분 소요 |{\" \"}\n          {String(Math.floor(price / 1000)) + \",\" + String(price % 1000)}원 |{\" \"}\n          {routeType}\n        </Text>\n      </TextContainer>\n      <BarContainer style={{ marginBottom: 0 }}>\n        {renderVehicleBar(total, runTime)}\n      </BarContainer>\n      <BarContainer style={{ marginTop: \"0.5rem\" }}>\n        {renderVehicleIcon(total, runTime)}\n      </BarContainer>\n    </Card>\n  );\n};\n\nexport default BusNSubwayCard;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { fontSize } from \"../Styles/_mixin\";\nimport { Container } from \"./common\";\nimport TaxiCard from \"./TaxiCard\";\nimport SubwayCard from \"./SubwayCard\";\nimport BusNSubwayCard from \"./BusNSubWayCard\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  position: fixed;\n  justify-content: space-around;\n  width: 100%;\n  bottom: 0;\n  // padding: 1.3rem;\n`;\n\nconst Option = styled.div`\n  margin-bottom: 8rem;\n  // &:first-of-type {\n  //   border-bottom: 3rem solid grey;\n  // }\n`;\n\n// const ResetButton = styled(Button)`\n//   // width: 90%;\n//   height: 3rem;\n//   color: white;\n//   background: #000033;\n//   border-radius: 1.5rem;\n//   margin-bottom: 1.3rem;\n//   backgrouncolor: #000;\n//   font-weight: bold;\n//   font-size: ${fontSize.largeFontSize};\n// `;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  margin-bottom: 1rem;\n  height: 3rem;\n  background: #000033;\n  border: none;\n`;\n\nexport default class OptinList extends Component {\n  constructor(props) {\n    super(props);\n    const { taxi, sub, defaultSub, busNSub, bus } = this.props;\n\n    this.state = {\n      taxi,\n      sub,\n      bus,\n      busNSub,\n      defaultSub\n    };\n  }\n\n  // Render Bus and Subway Routes\n  renderBusNSubwayRoutes() {\n    const { busNSub } = this.state;\n    const { routes } = busNSub;\n    let routeType = \"최소 시간 기준\";\n    if (routes) {\n      return routes.map((item, idx) => {\n        const { runTime, distance, price, totalTime } = item;\n        if (idx === 1) routeType = \"최소 환승 기준\";\n        return (\n          <BusNSubwayCard\n            key={idx}\n            distance={distance}\n            total={totalTime}\n            price={price}\n            routeType={routeType}\n            runTime={runTime}\n          />\n        );\n      });\n    }\n  }\n\n  // Render All SubwayRoutes\n  renderSubwayRoutes() {\n    const { sub, defaultSub } = this.state;\n    const { routes, walkInfo } = sub;\n\n    if (routes[0].runTime.length) {\n      return routes.map((route, idx) => {\n        const { total, price, runTime } = route;\n        return (\n          <SubwayCard\n            key={idx}\n            defaultSub={defaultSub}\n            walkInfo={walkInfo}\n            total={total}\n            price={price}\n            runTime={runTime}\n          />\n        );\n      });\n    } else return null;\n  }\n\n  render() {\n    const { taxi } = this.state;\n    return (\n      <Container>\n        <Option>\n          {this.renderSubwayRoutes()}\n          <TaxiCard taxi={taxi} />\n          {this.renderBusNSubwayRoutes()}\n        </Option>\n        <ButtonContainer>\n          <StyledButton type=\"primary\" shape=\"round\" size=\"large\" block={true}>\n            <Link to=\"/feedback\">피드백 하기</Link>\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontSize, lineColors, lineChar } from \"../Styles/_mixin\";\nimport { Text } from \"./common\";\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n`;\n\nconst LineIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 3rem;\n  background: white;\n  margin-right: 1rem;\n`;\n\nconst LineInner = styled.div`\n  width: 2.4rem;\n  height: 2.4rem;\n  border-radius: 2.4rem;\n  background: ${props => props.lineColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StationInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst StationCard = props => {\n  const { lineColor, lineName, endStationName, startStationName } = props;\n  return (\n    <InfoContainer>\n      <IconContainer>\n        <LineIcon>\n          <LineInner lineColor={lineColor}>{lineName.slice(0, 1)}</LineInner>\n        </LineIcon>\n        <StationInfo>\n          <Text\n            size=\"smallFontSize\"\n            //  style={{ marginLeft: \"0.6rem\" }}\n          >\n            {endStationName + \" 방향\"}\n          </Text>\n          <Text size=\"largeFontSize\" weight=\"bold\">\n            {startStationName}\n          </Text>\n        </StationInfo>\n      </IconContainer>\n    </InfoContainer>\n  );\n};\n\nexport default StationCard;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Statistic, Icon } from \"antd\";\nimport { fontSize, lineColors, lineChar } from \"../Styles/_mixin\";\nimport { Text } from \"./common\";\nimport StationCard from \"./StationCard\";\n\nconst { Countdown } = Statistic;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  padding-bottom: 0;\n  color: white;\n  flex: inherit;\n  max-height: 35vh;\n  background: #000033;\n`;\n\nconst LocContainer = styled.div`\n  display: flex;\n  flex: 1;\n  max-height: 1rem;\n  align-items: center;\n`;\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex: 3;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StationCardContainer = styled.div`\n  height: 70%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst CountdownContainer = styled(StationCardContainer)`\n  align-items: flex-end;\n`;\n\nconst VerticalLine = styled.div`\n  margin-left: 1.5rem;\n  width: 10px;\n  height: 16%;\n  border-left: 2px dotted #fff;\n`;\n\nconst StyledButton = styled(Button)`\n  color: white;\n  width: 60%;\n`;\n\nconst NowButton = styled.div`\n  border: 1px solid #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1rem;\n  height: 1.5rem;\n  width: 5rem;\n  font-size: 0.8rem;\n  margin-right: 0.7rem;\n`;\n\nexport default class MakchaDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    const { sub, addr } = props;\n    this.state = {\n      sub,\n      remain: sub.routeList[0].remain,\n      addr\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.sub !== this.props.sub ||\n      prevProps.addr !== this.props.addr\n    ) {\n      const { addr, sub } = this.props;\n      const { remain } = sub.routeList[0];\n      this.setState({ addr, remain });\n    }\n  }\n\n  onFinish() {\n    console.log(`Finished`);\n  }\n\n  renderDetail() {\n    const { remain, addr, sub } = this.state;\n    const { subOnly } = sub;\n    const deadline = Date.now() + 1000 * remain;\n    const { subOnlyList, lineList } = subOnly;\n\n    if (remain) {\n      const startStation = subOnlyList[0].displayName;\n      const endStation = subOnlyList[1].displayName;\n\n      return (\n        <>\n          <LocContainer>\n            <NowButton>\n              <Icon\n                type=\"environment\"\n                theme=\"filled\"\n                style={{ marginRight: \"0.3rem\" }}\n              />\n              현위치\n            </NowButton>\n            <Text size=\"normalFontSize\"> {addr}</Text>\n          </LocContainer>\n\n          <TimerContainer>\n            <StationCardContainer>\n              <StationCard\n                lineColor={lineList[0].lineColor}\n                lineName={lineList[0].lineName}\n                endStationName={endStation}\n                startStationName={startStation}\n              />\n              <VerticalLine />\n              <StationCard\n                lineColor={lineList[lineList.length - 1].lineColor}\n                lineName={lineList[lineList.length - 1].lineName}\n                endStationName={endStation}\n                startStationName={startStation}\n              />\n            </StationCardContainer>\n            <CountdownContainer>\n              <Countdown\n                value={deadline}\n                onFinish={this.onFinish}\n                valueStyle={{\n                  color: \"white\",\n                  // fontSize: fontSize.superLargeFontSize,\n                  fontSize: \"2.4rem\",\n                  lineHeight: 1\n                }}\n                format=\"m분 ss초\"\n              />\n              <StyledButton\n                type=\"ghost\"\n                shape=\"round\"\n                onClick={this.props.onButtonPress}\n              >\n                목적지 재설정\n              </StyledButton>\n            </CountdownContainer>\n          </TimerContainer>\n\n          {/* <TextContainer>\n            <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"1.5rem\">\n              막차\n            </Text>\n\n            <StyledButton\n              type=\"ghost\"\n              shape=\"round\"\n              onClick={this.props.onButtonPress}\n            >\n              목적지 재설정\n            </StyledButton>\n          </TextContainer> */}\n        </>\n      );\n    } else return null;\n  }\n\n  render() {\n    return <Container>{this.renderDetail()}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Timeline } from \"antd\";\nimport { lineColors, lineChar } from \"../Styles/_mixin\";\nimport SubwayCard from \"./SubwayCard\";\nimport { Container } from \"./common\";\n\nconst Item = styled(Timeline.Item)`\n  margin: 2rem;\n`;\n\nconst TimelineContainer = styled.div`\n  padding: 1rem;\n`;\n\nconst LineIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 3rem;\n  background: ${props => props.color};\n  margin-right: 1rem;\n`;\n\nconst LineInner = styled.div`\n  color: ${props => props.color};\n  width: 2rem;\n  height: 2rem;\n  border-radius: 2.4rem;\n  background: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nclass DefaultOption extends Component {\n  constructor(props) {\n    super(props);\n    const { sub } = this.props;\n    this.state = { sub };\n  }\n\n  renderSubwayRoutes() {\n    const { sub } = this.state;\n    const { routes, routeList, subOnly } = sub;\n\n    if (routes[0].runTime.length) {\n      const { totalTime, price, runTime } = routes[0];\n      return (\n        <SubwayCard\n          totalTime={totalTime}\n          price={price}\n          runTime={runTime}\n          lastTime={routeList[0].lastTime}\n        />\n      );\n    } else return null;\n  }\n\n  renderTimeline() {\n    const { sub } = this.state;\n    console.log(`sub`);\n    console.log(sub);\n    const { runTime } = sub.routes[0];\n    return runTime.map((route, idx) => {\n      return (\n        <Item\n          key={idx}\n          dot={\n            <LineIcon color={route.color}>\n              <LineInner color={route.color}>\n                {route.type === \"도보\" ? \"도보\" : route.type.slice(0, 1)}\n              </LineInner>\n            </LineIcon>\n          }\n        >\n          <span>{route.stationName ? route.stationName + \" | \" : null}</span>\n          <span>{route.time}분 소요</span>\n        </Item>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.renderSubwayRoutes()}\n        <TimelineContainer>\n          <Timeline>{this.renderTimeline()}</Timeline>\n        </TimelineContainer>\n      </Container>\n    );\n  }\n}\n\nexport default DefaultOption;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Spin, Icon, Button } from \"antd\";\nimport OptinList from \"./OptinList\";\nimport MakchaDetail from \"./MakchaDetail\";\nimport DefaultOption from \"./DefaultOption\";\nimport { Text, Container } from \"./common\";\nimport { makchaApi, dataHandler } from \"../api\";\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex: 5;\n  justify-content: center;\n  & .anticon-spin {\n    position: absolute;\n    top: 3rem;\n  }\n`;\n\nconst MakchaContainer = styled.div`\n  display: flex;\n  flex: 2;\n`;\n\nconst SpinContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  height: 80%;\n  color: #000033;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: white;\n  background: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n`;\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentPos: { startX: null, startY: null } };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loc\")) {\n      const { endX, endY } = JSON.parse(\n        localStorage.getItem(\"loc\")\n      ).endLocation;\n      this.setState({ currentPos: { ...this.state.currentPos, endX, endY } });\n    }\n\n    navigator.geolocation.getCurrentPosition(pos => {\n      const { latitude, longitude } = pos.coords;\n      this.setState({\n        currentPos: {\n          ...this.state.currentPos,\n          startX: longitude,\n          startY: latitude\n        }\n      });\n      // this.getData(latitude, longitude);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.currentPos.startX !== this.state.currentPos.startX) {\n      const { startX, startY } = this.state.currentPos;\n      this.getCurrentPosFromGPS(startX, startY);\n      this.getData(startY, startX);\n    }\n  }\n\n  getData(startY, startX) {\n    const { endX, endY } = this.state.currentPos;\n    console.log(\"success\");\n\n    makchaApi.getData({ startX, startY, endX, endY }).then(res => {\n      const { bus, busNSub, sub, taxi } = dataHandler(res.data);\n      this.setState({\n        bus,\n        busNSub,\n        sub,\n        taxi\n      });\n    });\n  }\n\n  getCurrentPosFromGPS(startX, startY) {\n    makchaApi.getPosFromGPS(startX, startY).then(res => {\n      this.setState({\n        currentPos: {\n          ...this.state.currentPos,\n          addr: res.data.documents[0].address.address_name,\n          startX,\n          startY\n        }\n      });\n    });\n  }\n\n  onButtonPress() {\n    localStorage.setItem(\"loc\", \"\");\n    this.props.toggleComponent();\n  }\n\n  renderMain() {\n    const { currentPos, bus, sub, busNSub, taxi } = this.state;\n    if (sub) {\n      return (\n        <>\n          <MakchaContainer>\n            <MakchaDetail\n              sub={sub}\n              addr={currentPos.addr}\n              onButtonPress={this.onButtonPress.bind(this)}\n            />\n          </MakchaContainer>\n          <ContentContainer>\n            {/* <OptinList\n              taxi={taxi}\n              sub={sub}\n              defaultSub={defaultSub}\n              bus={bus}\n              busNSub={busNSub}\n            /> */}\n            <DefaultOption sub={sub} />\n          </ContentContainer>\n        </>\n      );\n    } else\n      return (\n        <SpinContainer>\n          <Spin indicator={antIcon} />\n          <Text size=\"largeFontSize\">경로를 탐색 중입니다...</Text>\n          <StyledButton onClick={this.onButtonPress.bind(this)}>\n            목적지 다시 입력하기\n          </StyledButton>\n        </SpinContainer>\n      );\n  }\n\n  render() {\n    // const { taxiInfo, subwayPathOptionList, defaultInfo } = this.state.data;\n    // const { currentPos, bus, sub, busNSub, taxi, defaultSub } = this.state;\n    return <Container>{this.renderMain()}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport AddressForm from \"../Components/AddressForm\";\nimport Main from \"../Components/Main\";\nimport { Container } from \"../Components/common\";\n\nclass Landing extends Component {\n  state = {\n    component: \"form\"\n  };\n\n  componentDidMount() {\n    const addr = localStorage.getItem(\"loc\");\n    if (addr) this.setState({ component: \"main\" });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) console.log(this.props);\n  }\n\n  toggleComponent() {\n    const { component } = this.state;\n    if (component === \"form\") this.setState({ component: \"main\" });\n    else this.setState({ component: \"form\" });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.component === \"form\" ? (\n          <AddressForm toggleComponent={this.toggleComponent.bind(this)} />\n        ) : (\n          <Main toggleComponent={this.toggleComponent.bind(this)} />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { makchaApi } from \"../api\";\nimport { Container, Text } from \"../Components/common\";\n\nconst { TextArea } = Input;\n\nconst Textcontainer = styled.div`\n  flex: 2;\n  justify-content: space-around;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\nconst FeedbackContainer = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  flex: 6;\n  color: white;\n  justify-content: space-around;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  justify-content: center;\n  height: inherit;\n  width: 100%;\n`;\n\nconst StyledTextArea = styled(TextArea)`\n  line-height: 2rem;\n  background: #000033;\n  border-bottom: 1px solid #fff;\n  color: white;\n  font-size: 1.2rem;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex: 2;\n  justify-content: center;\n  align-items: flex-end;\n  padding: 1rem;\n`;\n\nclass Feedback extends Component {\n  state = {};\n\n  componentDidMount() {\n    let Uid = localStorage.getItem(\"Uid\");\n    this.setState({ Uid });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let formData = new FormData();\n        formData.append(\"feedback\", values.feedback);\n        formData.append(\"Uid\", this.state.Uid);\n        makchaApi.postFeedback(formData);\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Container style={{ background: \"#000033\" }}>\n        <Textcontainer>\n          <Text size=\"extraLargeFontSize\" weight=\"bold\">\n            피드백\n          </Text>\n          <Text>추가되면 좋을 기능이나 개선할 사항을 알려주세요~</Text>\n        </Textcontainer>\n        <FeedbackContainer>\n          <StyledForm>\n            {getFieldDecorator(\"feedback\", {\n              rules: [{ required: false, message: \"사용해 보니 어땠나요?\" }]\n            })(\n              <StyledTextArea\n                placeholder=\"피드백을 입력해주세요\"\n                // onPressEnter={this.handleSubmit}\n                autosize={{ minRows: 1, maxRows: 5 }}\n                style={{\n                  border: \"none\",\n                  borderBottom: \"1px solid #fff\"\n                  // textAlign: \"center\"\n                }}\n              />\n            )}\n          </StyledForm>\n        </FeedbackContainer>\n        <ButtonContainer>\n          <Button\n            shape=\"round\"\n            type=\"ghost\"\n            style={{ background: \"white\", color: \"#000033\" }}\n            block\n            onClick={this.handleSubmit}\n          >\n            <Link to=\"/\">확인</Link>\n          </Button>\n          <Button shape=\"round\" type=\"ghost\" style={{ color: \"white\" }} block>\n            <Link to=\"/\">취소</Link>\n          </Button>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Form.create({ name: \"feedback\" })(Feedback);\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GlobalStyle } from \"./Styles/global_styles\";\nimport Landing from \"./Routes/Landing\";\nimport Feedback from \"./Routes/Feedback\";\n\nconst AppContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <AppContainer className=\"app\">\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/feedback\" component={Feedback} />\n        </AppContainer>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// const makchaCache = \"makcha-1.0.1\";\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport LocalServiceWorkerRegister from \"./sw-register\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n// LocalServiceWorkerRegister();\n\n// if (process.env.NODE_ENV === \"production\")\n//   window.navigator.serviceWorker.register(\"./sw.js\");\n"],"sourceRoot":""}