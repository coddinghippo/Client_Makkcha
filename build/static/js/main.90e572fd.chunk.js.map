{"version":3,"sources":["config/keys.js","Styles/global_styles.js","api/data_handler.js","api/index.js","Styles/_mixin.js","Components/common/index.js","Components/AddressForm.jsx","Components/TaxiCard.jsx","Components/SubwayCard.jsx","Components/BusNSubWayCard.jsx","Components/OptinList.jsx","Components/StationCard.jsx","Components/MakchaDetail.jsx","Components/DefaultOption.jsx","Components/Main.jsx","Routes/Landing.jsx","Routes/Feedback.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","KakaoAK","GlobalStyle","createGlobalStyle","_templateObject","reset","dataHandler","data","sub","busNSub","busAndSubwayPathOptionList","busPathOptionList","taxiInfo","subwayPathOptionList","console","log","defaultSub","routeList","taxi","walkInfo","routes","_loop","idx","_subwayPathOptionList","Number","pathStationList","distance","price","runTimeArr","type","time","cum","map","item","runTime","line","parseInt","slice","push","length","total","reduce","a","x","Object","objectSpread","handleSub","sort","b","totalTime","minTime","transferNum","minTransferNum","temp","eachRoute","pathList","pathItem","path","name","duration","color","handleBusNSub","bus","Uid","uuidv1","localStorage","setItem","api","axios","create","baseURL","headers","kakaoApi","Authorization","concat","keys","makchaApi","getData","_ref","startX","startY","endX","endY","get","getPosFromGPS","y","getPosFromAddr","addr","getPosFromKeyword","keyword","postFeedback","formData","post","sizes","fontSize","smallFontSize","normalFontSize","largeFontSize","extraLargeFontSize","superLargeFontSize","lineColors","도보","1","2","3","4","5","6","7","8","9","kyeongkang","kyung","chun","kong","bun","서해선","suin","sinbun","yongin","우이신설경전철","경전철의정부","in","in2","lineChar","customMediaQuery","maxWidth","Text","styled","p","common_templateObject","props","size","weight","lineHeight","Card","div","_templateObject2","BarContainer","_templateObject3","Bar","_templateObject4","TextContainer","_templateObject5","Container","_templateObject6","Item","Form","DefaultContainer","AddressForm_templateObject","StyledForm","AddressForm_templateObject2","background","AddressForm_templateObject3","StyledItem","AddressForm_templateObject4","StyledInput","Input","AddressForm_templateObject5","ButtonContainer","AddressForm_templateObject6","StyledButton","Button","_templateObject7","AddressForm","handleSubmit","e","preventDefault","_this","form","validateFields","err","values","getPos","address","this","searchVal","Promise","race","resolve","then","res","documents","result","endLocation","address_name","JSON","stringify","toggleComponent","_this$props$form","getFieldDecorator","getFieldError","addressError","isFieldTouched","react_default","createElement","AddressForm_Container","validateStatus","help","rules","required","message","placeholder","onPressEnter","onClick","Component","TaxiCard","toFixed","String","Math","floor","style","width","backgroundColor","SubwayCard","lastTime","marginBottom","className","key","renderVehicleBar","marginTop","icon","renderVehicleIcon","BusNSubwayCard","routeType","OptinList_templateObject","Option","OptinList_templateObject2","OptinList_templateObject3","InfoContainer","StationCard_templateObject","IconContainer","StationCard_templateObject2","LineIcon","StationCard_templateObject3","LineInner","StationCard_templateObject4","StationInfo","StationCard_templateObject5","StationCard","endStationName","startStationName","Countdown","Statistic","MakchaDetail_templateObject","LocContainer","MakchaDetail_templateObject2","TimerContainer","MakchaDetail_templateObject3","StationCardContainer","MakchaDetail_templateObject4","CountdownContainer","MakchaDetail_templateObject5","VerticalLine","MakchaDetail_templateObject6","MakchaDetail_templateObject7","NowButton","_templateObject8","MakchaDetail","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","remain","prevProps","prevState","defaultInfo","_this$props","setState","_this$state","deadline","Date","now","_defaultSub$pathStati","Fragment","es_icon","theme","marginRight","Components_StationCard","value","onFinish","valueStyle","MakchaDetail_StyledButton","shape","onButtonPress","MakchaDetail_Container","renderDetail","Timeline","DefaultOption_templateObject","TimelineContainer","DefaultOption_templateObject2","DefaultOption_templateObject3","DefaultOption_templateObject4","DefaultOption","_routes$","Components_SubwayCard","_this$state2","route","DefaultOption_Item","dot","DefaultOption_LineIcon","DefaultOption_LineInner","renderSubwayRoutes","timeline","renderTimeline","ContentContainer","Main_templateObject","MakchaContainer","Main_templateObject2","SpinContainer","Main_templateObject3","Main_templateObject4","antIcon","spin","Main","currentPos","_this2","getItem","_JSON$parse$endLocati","parse","navigator","geolocation","getCurrentPosition","pos","_pos$coords","coords","latitude","longitude","_this$state$currentPo","getCurrentPosFromGPS","_this3","_this$state$currentPo2","_dataHandler","_this4","MakchaDetail_MakchaDetail","bind","Components_DefaultOption","indicator","Main_StyledButton","renderMain","Landing","component","Components_AddressForm","Main_Main","TextArea","Textcontainer","Feedback_templateObject","FeedbackContainer","Feedback_templateObject2","Feedback_templateObject3","StyledTextArea","Feedback_templateObject4","Feedback_templateObject5","Feedback","FormData","append","feedback","Feedback_StyledForm","autosize","minRows","maxRows","border","borderBottom","Feedback_ButtonContainer","es_button","block","react_router_dom","to","AppContainer","App_templateObject","App","react_router","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.90e572fd.chunk.js","sourcesContent":["module.exports = {\n  KakaoAK: \"608b513f89e46075473ef312d8ea7a39\"\n};\n","import reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n${reset};\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.6/antd.min.css\");\n\n* {\n    box-sizing: border-box;\n}\nhtml {\n  font-size: 16px;\n}\n\nbody{\n  font-family: 'Nanum Gothic', sans-serif;\n}\n\n#root{\n  width: 100%;\n  height: 100%;\n}\n\na{\n  color: unset;\n  &:hover{\n    color: unset;\n  }\n}\n\nstrong{\n  font-weight: 700;\n}\n\nbutton{\n  cursor: pointer;\n  background-color: white;\n  outline: none;\n  border: none;\n  &:active {\n    outline: none;\n    border: none;\n  }\n}\n`;\n","const busLines = {};\n\nexport const dataHandler = data => {\n  const {\n    busAndSubwayPathOptionList,\n    busPathOptionList,\n    taxiInfo,\n    subwayPathOptionList\n  } = data;\n\n  console.log(data);\n\n  // if (subwayPathOptionList) {\n  let sub, busNSub, bus;\n  const defaultSub = subwayPathOptionList\n    ? subwayPathOptionList.routeList[0]\n    : null;\n  const taxi = taxiInfo;\n\n  function handleSub() {\n    const { routeList, walkInfo } = subwayPathOptionList;\n    const routes = [];\n\n    for (let idx = 0; idx < routeList.length; idx++) {\n      let { pathStationList, distance, price } = subwayPathOptionList.routeList[\n        Number(idx)\n      ];\n      let runTimeArr = [{ type: \"도보\", time: walkInfo.time * 60 }];\n\n      // store sum of runTime for each line\n      let cum = 0;\n      pathStationList.map(item => {\n        let time = item.runTime;\n        let type = item.line;\n        if (time !== null) {\n          time = parseInt(time.slice(0, 2)) * 60 + parseInt(time.slice(3));\n          cum += time;\n          return null;\n        } else {\n          runTimeArr.push({ type, time: cum });\n          cum = 0;\n          return null;\n        }\n      });\n\n      runTimeArr.push({\n        type: pathStationList[pathStationList.length - 1].line,\n        time: cum\n      });\n\n      let total = runTimeArr.reduce((a, x) => {\n        return a + x.time;\n      }, 0);\n      total += walkInfo.time;\n\n      routes.push({ runTime: runTimeArr, total, distance, price });\n    }\n    sub = { ...subwayPathOptionList, routes, walkInfo };\n  }\n\n  function handleBusNSub() {\n    busNSub = busAndSubwayPathOptionList;\n    const { routeList } = busNSub;\n    if (routeList) {\n      let routes = [];\n      routeList.sort((a, b) => a.totalTime - b.totalTime);\n      let minTime = routeList[0];\n      routeList.sort((a, b) => a.transferNum - b.transferNum);\n      let minTransferNum = routeList[0];\n\n      let temp = [];\n      if (minTime !== minTransferNum) temp.push(minTime);\n      temp.push(minTransferNum);\n\n      temp.map((eachRoute, idx) => {\n        const { distance, price, totalTime, pathList } = eachRoute;\n        console.log(eachRoute);\n        // const route = [];\n        const runTime = [];\n        pathList.map(pathItem => {\n          let path = {};\n\n          switch (pathItem.type) {\n            case \"BUS\":\n              // BUS HANDLING\n              path = {};\n              path[\"icon\"] = \"fas fa-bus\";\n              path[\"lines\"] = pathItem.routes.map(line => line.name);\n              path[\"type\"] = pathItem.routes[0].name;\n              path[\"time\"] = pathItem.duration;\n              path[\"color\"] = pathItem.routes[0].type.color;\n              return runTime.push(path);\n            case \"SUBWAY\":\n              // SUBWAY HANDLING\n              path = {};\n              path[\"icon\"] = \"fas fa-train\";\n              path[\"lines\"] = pathItem.routes.map(line => line.name);\n              path[\"time\"] = pathItem.duration;\n              path[\"type\"] = pathItem.routes[0].name;\n              path[\"color\"] = pathItem.routes[0].type.color;\n              return runTime.push(path);\n            default:\n              path = { type: \"도보\" };\n              path[\"icon\"] = \"fas fa-walking\";\n              path[\"time\"] = pathItem.duration;\n              path[\"color\"] = \"#ccc\";\n              return runTime.push(path);\n            // WALKING HANDLING\n          }\n        });\n        // route.map(item => runTime.push({ type: item.type, time: item.time }));\n        routes.push({ distance, price, totalTime, runTime });\n      });\n      busNSub = { ...busAndSubwayPathOptionList, routes };\n      // console.log(busNSub);\n    }\n  }\n\n  function handleBus() {\n    bus = busPathOptionList;\n  }\n\n  function main() {\n    handleSub();\n    handleBusNSub();\n    handleBus();\n  }\n\n  main();\n  return { taxi, sub, busNSub, bus, defaultSub };\n  // } else return null;\n};\n","import axios from \"axios\";\nimport keys from \"../config/keys\";\nimport uuidv1 from \"uuid/v1\";\nimport { dataHandler } from \"./data_handler\";\n\n// Use json-server db when in dev env\nlet apiURL = \"https://api.makkcha.com/\";\nif (process.env.NODE_ENV === \"development\") apiURL = \"http://localhost:3004\";\n\nconst Uid = uuidv1();\nlocalStorage.setItem(\"Uid\", Uid);\n\nconst api = axios.create({\n  baseURL: apiURL,\n  headers: { Uid }\n});\n\nconst kakaoApi = axios.create({\n  baseURL: \"https://dapi.kakao.com/v2/local/\",\n  headers: { Authorization: `KakaoAK ${keys.KakaoAK}` }\n});\n\nexport const makchaApi = {\n  getData: ({ startX, startY, endX, endY }) =>\n    api.get(\n      process.env.NODE_ENV === \"development\"\n        ? `/db`\n        : `searchMakcha?startX=${startX}&startY=${startY}&endX=${endX}&endY=${endY}`\n      // `searchMakcha?startX=126.9153689271&startY=37.5678973956&endX=127.051217&endY=37.505447`\n    ),\n  getPosFromGPS: (x, y) =>\n    kakaoApi.get(`geo/coord2address.json?x=${x}&y=${y}&input_coord=WGS84`),\n  getPosFromAddr: addr => kakaoApi.get(`search/address.json?query=${addr}`),\n  getPosFromKeyword: keyword =>\n    kakaoApi.get(`search/keyword.json?query=${keyword}`),\n  postFeedback: formData => api.post(\"/feedback\", formData)\n};\n\nexport { dataHandler };\n","// sizes for media queries\nconst sizes = {\n  desktop: 922,\n  tablet: 768,\n  phone: 576\n};\n\nexport const fontSize = {\n  smallFontSize: \"0.7rem\",\n  normalFontSize: \"1rem\",\n  largeFontSize: \"1.2rem\",\n  extraLargeFontSize: \"2.4rem\",\n  superLargeFontSize: \"3.3rem\"\n};\n\nexport const lineColors = {\n  도보: \"#ccc\",\n  \"1\": \"#052f93\",\n  \"2\": \"#10a643\",\n  \"3\": \"#ea8406\",\n  \"4\": \"#00a8e6\",\n  \"5\": \"#a95094\",\n  \"6\": \"#d08d1a\",\n  \"7\": \"#657931\",\n  \"8\": \"#e74e6d\",\n  \"9\": \"#be941c\",\n  kyeongkang: \"#004ea7\",\n  kyung: \"#79c0a0\",\n  chun: \"#33C7A7\",\n  kong: \"#038fa0\",\n  bun: \"#fcd204\",\n  서해선: \"#8be800\",\n  suin: \"#fbb901\",\n  sinbun: \"#cd2234\",\n  yongin: \"#56ab32\",\n  우이신설경전철: \"#b7b7b7\",\n  경전철의정부: \"#f6ba02\",\n  in: \"#6496df\",\n  in2: \"#fd9800\"\n};\n\nexport const lineChar = {\n  \"1\": \"1\",\n  \"2\": \"2\",\n  \"3\": \"3\",\n  \"4\": \"4\",\n  \"5\": \"5\",\n  \"6\": \"6\",\n  \"7\": \"7\",\n  \"8\": \"8\",\n  \"9\": \"9\",\n  kyeongkang: \"경강\",\n  kyung: \"중앙\",\n  chun: \"경춘\",\n  kong: \"공항\",\n  bun: \"분\",\n  서해선: \"서해\",\n  suin: \"수인\",\n  sinbun: \"신분\",\n  yongin: \"용인\",\n  우이신설경전철: \"우이\",\n  경전철의정부: \"의정\",\n  in: \"인1\",\n  in2: \"인2\",\n  도보: \"도보\"\n};\n\nexport const headerHeight = \"3rem\";\n\nexport const color = { bgColor: \"#141414\", fontColor: \"#000\" };\n\nconst customMediaQuery = maxWidth => `@media (max-width: ${maxWidth}px)`;\n\nexport const media = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(sizes.desktop),\n  tablet: customMediaQuery(sizes.tablet),\n  phone: customMediaQuery(sizes.phone)\n};\n","import styled from \"styled-components\";\nimport { fontSize } from \"../../Styles/_mixin\";\n\nexport const Text = styled.p`\n  font-size: ${props => fontSize[props.size] || fontSize.normalFontSize};\n  font-weight: ${props => props.weight};\n  line-height: ${props => props.lineHeight || \"1rem\"};\n`;\n\nexport const Card = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const BarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n  width: 90%;\n  max-width: 90%;\n`;\n\nexport const Bar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.8rem;\n  height: 1.2rem;\n  &:first-of-type {\n    border-top-left-radius: 3rem;\n    border-bottom-left-radius: 3rem;\n  }\n  &:last-of-type {\n    border-top-right-radius: 3rem;\n    border-bottom-right-radius: 3rem;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  width: 90%;\n  margin: 1rem 0;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { makchaApi } from \"../api\";\nimport { fontSize } from \"../Styles/_mixin\";\nimport { Container as DefaultContainer } from \"./common\";\n\nconst { Item } = Form;\n\nconst Container = styled(DefaultContainer)`\n  background: #000033;\n  // justify-content: center;\n  // align-items: center;\n  &.slick-slide {\n    text-align: center;\n    height: 160px;\n    line-height: 160px;\n    background: #000033;\n    overflow: hidden;\n  }\n\n  & h3 {\n    color: #fff;\n  }t\n`;\n\nconst Test = styled.div`\n  height: 160px;\n  width: 100%;\n  background: ${props => props.background};\n  overflow: hidden;\n  text-align: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledItem = styled(Item)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  border: none;\n  background: #000033;\n  text-align: center;\n  color: white;\n  border-bottom: 1px solid white;\n  &#address_address {\n    border-bottom: 1px solid white;\n  }\n  transition: none;\n  border-radius: 0;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  postion: absolute;\n  bottom: 0;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nclass AddressForm extends Component {\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  getPos(searchVal) {\n    function posFromAddr() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromAddr(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    function posFromKeyword() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromKeyword(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    Promise.race([posFromAddr(), posFromKeyword()])\n      .then(result => {\n        const endLocation = { endX: result[0].x, endY: result[0].y };\n        const addr = result[0].address_name;\n        localStorage.setItem(\"loc\", JSON.stringify({ endLocation, addr }));\n      })\n      .then(this.props.toggleComponent);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.getPos(values.address);\n      } else console.log(err);\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const addressError = isFieldTouched(\"address\") && getFieldError(\"address\");\n\n    return (\n      <Container>\n        <StyledForm>\n          <StyledItem\n            validateStatus={addressError ? \"error\" : \"\"}\n            help={addressError || \"\"}\n          >\n            {getFieldDecorator(\"address\", {\n              rules: [\n                { required: false, message: \"집 근처 역을 입력해 주세요!\" }\n              ]\n            })(\n              <StyledInput\n                placeholder=\"집 근처 역을 입력해 주세요\"\n                onPressEnter={this.handleSubmit}\n              />\n            )}\n          </StyledItem>\n        </StyledForm>\n        <ButtonContainer>\n          <StyledButton type=\"secondary\" onClick={this.handleSubmit}>\n            확인\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Form.create({ name: \"address\" })(AddressForm);\n","import React from \"react\";\nimport { Card, Text, BarContainer, Bar, TextContainer } from \"./common\";\n\nconst TaxiCard = props => {\n  const { taxi } = props;\n\n  return (\n    <Card>\n      <TextContainer>\n        <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"2rem\">\n          택시\n        </Text>\n        <Text>\n          {taxi.time}분 소요 | {(taxi.distance / 1000).toFixed(1)}km | 약{\" \"}\n          {String(Math.floor(taxi.price / 1000)) +\n            \",\" +\n            String(taxi.price % 1000)}\n          원\n        </Text>\n      </TextContainer>\n      <BarContainer>\n        <Bar\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#ffd300\",\n            color: \"white\"\n          }}\n        >\n          {taxi.time}분\n        </Bar>\n      </BarContainer>\n    </Card>\n  );\n};\n\nexport default TaxiCard;\n","import React from \"react\";\nimport uuidv1 from \"uuid/v1\";\nimport { lineColors } from \"../Styles/_mixin\";\nimport { Card, Text, BarContainer, Bar, TextContainer } from \"./common\";\n\nconst SubwayCard = props => {\n  const { defaultSub, walkInfo, total, price, runTime } = props;\n\n  // Render SubwayBar for each route\n  const renderVehicleBar = (total, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / total) * 100);\n      if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length,\n            backgroundColor: lineColors[item.type],\n            color: \"white\"\n          }}\n        >\n          {Math.floor(Number(item.time) / 60)}분\n        </Bar>\n      );\n    });\n  };\n\n  const renderVehicleIcon = (total, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / total) * 100);\n      let icon = \"fas fa-train\";\n      if (length < 24) length = 24;\n\n      length = String(length) + \"%\";\n      if (item.type === \"도보\") icon = \"fas fa-walking\";\n\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length\n          }}\n        >\n          <i\n            className={icon}\n            style={{ color: lineColors[item.type], fontSize: \"0.8rem\" }}\n          >\n            {\" \"}\n            {item.type === \"도보\" ? null : item.type}\n          </i>\n        </Bar>\n      );\n    });\n  };\n\n  return (\n    <Card>\n      <TextContainer>\n        <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"2rem\">\n          지하철\n        </Text>\n        <Text weight=\"normal\">\n          {Math.floor(total / 60)}분 소요 |{\" \"}\n          {String(Math.floor(price / 1000)) + \",\" + String(price % 1000)}원 |\n          막차 {defaultSub.lastTime.slice(0, 5)} | 도보 {walkInfo.time}분\n        </Text>\n      </TextContainer>\n      <BarContainer style={{ marginBottom: 0 }}>\n        {renderVehicleBar(total, runTime)}\n      </BarContainer>\n      <BarContainer style={{ marginTop: \"0.5rem\" }}>\n        {renderVehicleIcon(total, runTime)}\n      </BarContainer>\n    </Card>\n  );\n};\n\nexport default SubwayCard;\n","import React from \"react\";\nimport uuidv1 from \"uuid/v1\";\nimport { Card, Text, BarContainer, Bar, TextContainer } from \"./common\";\n\nconst BusNSubwayCard = props => {\n  const { price, runTime, total, routeType } = props;\n\n  // Render SubwayBar for each route\n  console.log(props);\n  const renderVehicleBar = (total, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / total) * 100);\n      if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length,\n            backgroundColor: item.color,\n            color: \"white\"\n          }}\n        >\n          {Math.floor(Number(item.time))}분\n        </Bar>\n      );\n    });\n  };\n\n  const renderVehicleIcon = (total, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / total) * 100);\n      if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length\n          }}\n        >\n          <i\n            className={item.icon}\n            style={{ color: item.color, fontSize: \"0.8rem\" }}\n          >\n            {\" \"}\n            {item.type === \"도보\" ? null : item.type}\n          </i>\n        </Bar>\n      );\n    });\n  };\n\n  return (\n    <Card>\n      <TextContainer>\n        <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"2rem\">\n          버스 + 지하철\n        </Text>\n        <Text weight=\"normal\">\n          {Math.floor(total)}분 소요 |{\" \"}\n          {String(Math.floor(price / 1000)) + \",\" + String(price % 1000)}원 |{\" \"}\n          {routeType}\n        </Text>\n      </TextContainer>\n      <BarContainer style={{ marginBottom: 0 }}>\n        {renderVehicleBar(total, runTime)}\n      </BarContainer>\n      <BarContainer style={{ marginTop: \"0.5rem\" }}>\n        {renderVehicleIcon(total, runTime)}\n      </BarContainer>\n    </Card>\n  );\n};\n\nexport default BusNSubwayCard;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { fontSize } from \"../Styles/_mixin\";\nimport { Container } from \"./common\";\nimport TaxiCard from \"./TaxiCard\";\nimport SubwayCard from \"./SubwayCard\";\nimport BusNSubwayCard from \"./BusNSubWayCard\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  position: fixed;\n  justify-content: space-around;\n  width: 100%;\n  bottom: 0;\n  // padding: 1.3rem;\n`;\n\nconst Option = styled.div`\n  margin-bottom: 8rem;\n  // &:first-of-type {\n  //   border-bottom: 3rem solid grey;\n  // }\n`;\n\n// const ResetButton = styled(Button)`\n//   // width: 90%;\n//   height: 3rem;\n//   color: white;\n//   background: #000033;\n//   border-radius: 1.5rem;\n//   margin-bottom: 1.3rem;\n//   backgrouncolor: #000;\n//   font-weight: bold;\n//   font-size: ${fontSize.largeFontSize};\n// `;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  margin-bottom: 1rem;\n  height: 3rem;\n  background: #000033;\n  border: none;\n`;\n\nexport default class OptinList extends Component {\n  constructor(props) {\n    super(props);\n    const { taxi, sub, defaultSub, busNSub, bus } = this.props;\n\n    this.state = {\n      taxi,\n      sub,\n      bus,\n      busNSub,\n      defaultSub\n    };\n  }\n\n  // Render Bus and Subway Routes\n  renderBusNSubwayRoutes() {\n    const { busNSub } = this.state;\n    const { routes } = busNSub;\n    let routeType = \"최소 시간 기준\";\n    if (routes) {\n      return routes.map((item, idx) => {\n        const { runTime, distance, price, totalTime } = item;\n        if (idx === 1) routeType = \"최소 환승 기준\";\n        return (\n          <BusNSubwayCard\n            key={idx}\n            distance={distance}\n            total={totalTime}\n            price={price}\n            routeType={routeType}\n            runTime={runTime}\n          />\n        );\n      });\n    }\n  }\n\n  // Render All SubwayRoutes\n  renderSubwayRoutes() {\n    const { sub, defaultSub } = this.state;\n    const { routes, walkInfo } = sub;\n\n    if (routes[0].runTime.length) {\n      return routes.map((route, idx) => {\n        const { total, price, runTime } = route;\n        return (\n          <SubwayCard\n            key={idx}\n            defaultSub={defaultSub}\n            walkInfo={walkInfo}\n            total={total}\n            price={price}\n            runTime={runTime}\n          />\n        );\n      });\n    } else return null;\n  }\n\n  render() {\n    const { taxi } = this.state;\n    return (\n      <Container>\n        <Option>\n          {this.renderSubwayRoutes()}\n          <TaxiCard taxi={taxi} />\n          {this.renderBusNSubwayRoutes()}\n        </Option>\n        <ButtonContainer>\n          <StyledButton type=\"primary\" shape=\"round\" size=\"large\" block={true}>\n            <Link to=\"/feedback\">피드백 하기</Link>\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontSize, lineColors, lineChar } from \"../Styles/_mixin\";\nimport { Text } from \"./common\";\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n`;\n\nconst LineIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 3rem;\n  background: white;\n  margin-right: 1rem;\n`;\n\nconst LineInner = styled.div`\n  width: 2.4rem;\n  height: 2.4rem;\n  border-radius: 2.4rem;\n  background: ${props => lineColors[props.line]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StationInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst StationCard = props => {\n  const { line, endStationName, startStationName } = props;\n  return (\n    <InfoContainer>\n      <IconContainer>\n        <LineIcon>\n          <LineInner line={line}>{lineChar[line]}</LineInner>\n        </LineIcon>\n        <StationInfo>\n          <Text\n            size=\"smallFontSize\"\n            //  style={{ marginLeft: \"0.6rem\" }}\n          >\n            {endStationName + \" 방향\"}\n          </Text>\n          <Text size=\"largeFontSize\" weight=\"bold\">\n            {startStationName + \"역\"}\n          </Text>\n        </StationInfo>\n      </IconContainer>\n    </InfoContainer>\n  );\n};\n\nexport default StationCard;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Statistic, Icon } from \"antd\";\nimport { fontSize, lineColors, lineChar } from \"../Styles/_mixin\";\nimport { Text } from \"./common\";\nimport StationCard from \"./StationCard\";\n\nconst { Countdown } = Statistic;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  padding-bottom: 0;\n  color: white;\n  flex: inherit;\n  max-height: 35vh;\n  background: #000033;\n`;\n\nconst LocContainer = styled.div`\n  display: flex;\n  flex: 1;\n  max-height: 1rem;\n  align-items: center;\n`;\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex: 3;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StationCardContainer = styled.div`\n  height: 70%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst CountdownContainer = styled(StationCardContainer)`\n  align-items: flex-end;\n`;\n\nconst VerticalLine = styled.div`\n  margin-left: 1.5rem;\n  width: 10px;\n  height: 16%;\n  border-left: 2px dotted #fff;\n`;\n\nconst StyledButton = styled(Button)`\n  color: white;\n  width: 60%;\n`;\n\nconst NowButton = styled.div`\n  border: 1px solid #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1rem;\n  height: 1.5rem;\n  width: 5rem;\n  font-size: 0.8rem;\n  margin-right: 0.7rem;\n`;\n\nexport default class MakchaDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    const { defaultSub, addr } = props;\n    this.state = {\n      defaultSub,\n      remain: defaultSub.remain,\n      addr\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.defaultInfo !== this.props.defaultInfo ||\n      prevProps.addr !== this.props.addr\n    ) {\n      const { defaultSub, addr } = this.props;\n      this.setState({ defaultSub, addr, remain: defaultSub.remain });\n    }\n  }\n\n  onFinish() {\n    console.log(`Finished`);\n  }\n\n  renderDetail() {\n    const { defaultSub, remain, addr } = this.state;\n    const deadline = Date.now() + 1000 * remain;\n\n    if (remain) {\n      const {\n        startStationName,\n        line,\n        endStationName\n      } = defaultSub.pathStationList[0];\n\n      return (\n        <>\n          <LocContainer>\n            <NowButton>\n              <Icon\n                type=\"environment\"\n                theme=\"filled\"\n                style={{ marginRight: \"0.3rem\" }}\n              />\n              현위치\n            </NowButton>\n            <Text size=\"normalFontSize\"> {addr}</Text>\n          </LocContainer>\n\n          <TimerContainer>\n            <StationCardContainer>\n              <StationCard\n                line={line}\n                endStationName={endStationName}\n                startStationName={startStationName}\n              />\n              <VerticalLine />\n              <StationCard\n                line=\"2\"\n                endStationName={endStationName}\n                startStationName={startStationName}\n              />\n            </StationCardContainer>\n            <CountdownContainer>\n              <Countdown\n                value={deadline}\n                onFinish={this.onFinish}\n                valueStyle={{\n                  color: \"white\",\n                  fontSize: fontSize.superLargeFontSize,\n                  lineHeight: 1\n                }}\n              />\n              <StyledButton\n                type=\"ghost\"\n                shape=\"round\"\n                onClick={this.props.onButtonPress}\n              >\n                목적지 재설정\n              </StyledButton>\n            </CountdownContainer>\n          </TimerContainer>\n\n          {/* <TextContainer>\n            <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"1.5rem\">\n              막차\n            </Text>\n\n            <StyledButton\n              type=\"ghost\"\n              shape=\"round\"\n              onClick={this.props.onButtonPress}\n            >\n              목적지 재설정\n            </StyledButton>\n          </TextContainer> */}\n        </>\n      );\n    } else return null;\n  }\n\n  render() {\n    return <Container>{this.renderDetail()}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Timeline } from \"antd\";\nimport { lineColors, lineChar } from \"../Styles/_mixin\";\nimport SubwayCard from \"./SubwayCard\";\nimport { Container } from \"./common\";\n\nconst Item = styled(Timeline.Item)`\n  margin: 2rem;\n`;\n\nconst TimelineContainer = styled.div`\n  padding: 1rem;\n`;\n\nconst LineIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 3rem;\n  background: white;\n  margin-right: 1rem;\n`;\n\nconst LineInner = styled.div`\n  color: white;\n  width: 2.4rem;\n  height: 2.4rem;\n  border-radius: 2.4rem;\n  background: ${props => lineColors[props.line]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nclass DefaultOption extends Component {\n  constructor(props) {\n    super(props);\n    const { sub, defaultSub } = this.props;\n    this.state = { sub, defaultSub };\n  }\n\n  renderSubwayRoutes() {\n    const { sub, defaultSub } = this.state;\n    const { routes, walkInfo } = sub;\n\n    if (routes[0].runTime.length) {\n      const { total, price, runTime } = routes[0];\n      return (\n        <SubwayCard\n          defaultSub={defaultSub}\n          walkInfo={walkInfo}\n          total={total}\n          price={price}\n          runTime={runTime}\n        />\n      );\n    } else return null;\n  }\n\n  renderTimeline() {\n    const { sub, defaultSub } = this.state;\n    const { runTime } = sub.routes[0];\n    return runTime.map((route, idx) => {\n      return (\n        <Item\n          key={idx}\n          color={lineColors[route.type]}\n          dot={\n            <LineIcon>\n              <LineInner line={route.type}>{lineChar[route.type]}</LineInner>\n            </LineIcon>\n          }\n        >\n          {route.type}\n        </Item>\n      );\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <Container>\n        {this.renderSubwayRoutes()}\n        <TimelineContainer>\n          <Timeline>{this.renderTimeline()}</Timeline>\n        </TimelineContainer>\n      </Container>\n    );\n  }\n}\n\nexport default DefaultOption;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Spin, Icon, Button } from \"antd\";\nimport OptinList from \"./OptinList\";\nimport MakchaDetail from \"./MakchaDetail\";\nimport DefaultOption from \"./DefaultOption\";\nimport { Text, Container } from \"./common\";\nimport { makchaApi, dataHandler } from \"../api\";\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex: 5;\n  justify-content: center;\n  & .anticon-spin {\n    position: absolute;\n    top: 3rem;\n  }\n`;\n\nconst MakchaContainer = styled.div`\n  display: flex;\n  flex: 2;\n`;\n\nconst SpinContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  height: 80%;\n  color: #000033;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: white;\n  background: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n`;\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentPos: { startX: null, startY: null } };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loc\")) {\n      const { endX, endY } = JSON.parse(\n        localStorage.getItem(\"loc\")\n      ).endLocation;\n      this.setState({ currentPos: { ...this.state.currentPos, endX, endY } });\n    }\n\n    navigator.geolocation.getCurrentPosition(pos => {\n      const { latitude, longitude } = pos.coords;\n      this.setState({\n        currentPos: {\n          ...this.state.currentPos,\n          startX: longitude,\n          startY: latitude\n        }\n      });\n      // this.getData(latitude, longitude);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.currentPos.startX !== this.state.currentPos.startX) {\n      const { startX, startY } = this.state.currentPos;\n      this.getCurrentPosFromGPS(startX, startY);\n      this.getData(startY, startX);\n    }\n  }\n\n  getData(startY, startX) {\n    const { endX, endY } = this.state.currentPos;\n    console.log(\"success\");\n\n    makchaApi.getData({ startX, startY, endX, endY }).then(res => {\n      const { bus, busNSub, defaultSub, sub, taxi } = dataHandler(res.data);\n      this.setState({\n        bus,\n        busNSub,\n        defaultSub,\n        sub,\n        taxi\n      });\n    });\n  }\n\n  getCurrentPosFromGPS(startX, startY) {\n    makchaApi.getPosFromGPS(startX, startY).then(res => {\n      this.setState({\n        currentPos: {\n          ...this.state.currentPos,\n          addr: res.data.documents[0].address.address_name,\n          startX,\n          startY\n        }\n      });\n    });\n  }\n\n  onButtonPress() {\n    localStorage.setItem(\"loc\", \"\");\n    this.props.toggleComponent();\n  }\n\n  renderMain() {\n    const { currentPos, bus, sub, busNSub, taxi, defaultSub } = this.state;\n    if (defaultSub) {\n      return (\n        <>\n          <MakchaContainer>\n            <MakchaDetail\n              defaultSub={defaultSub}\n              addr={currentPos.addr}\n              onButtonPress={this.onButtonPress.bind(this)}\n            />\n          </MakchaContainer>\n          <ContentContainer>\n            {/* <OptinList\n              taxi={taxi}\n              sub={sub}\n              defaultSub={defaultSub}\n              bus={bus}\n              busNSub={busNSub}\n            /> */}\n            <DefaultOption defaultSub={defaultSub} sub={sub} />\n          </ContentContainer>\n        </>\n      );\n    } else\n      return (\n        <SpinContainer>\n          <Spin indicator={antIcon} />\n          <Text size=\"largeFontSize\">경로를 탐색 중입니다...</Text>\n          <StyledButton onClick={this.onButtonPress.bind(this)}>\n            목적지 다시 입력하기\n          </StyledButton>\n        </SpinContainer>\n      );\n  }\n\n  render() {\n    // console.log(this.props, this.state);\n    // const { taxiInfo, subwayPathOptionList, defaultInfo } = this.state.data;\n    // const { currentPos, bus, sub, busNSub, taxi, defaultSub } = this.state;\n    return <Container>{this.renderMain()}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport AddressForm from \"../Components/AddressForm\";\nimport Main from \"../Components/Main\";\nimport { Container } from \"../Components/common\";\n\nclass Landing extends Component {\n  state = {\n    component: \"form\"\n  };\n\n  componentDidMount() {\n    const addr = localStorage.getItem(\"loc\");\n    if (addr) this.setState({ component: \"main\" });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) console.log(this.props);\n  }\n\n  toggleComponent() {\n    const { component } = this.state;\n    if (component === \"form\") this.setState({ component: \"main\" });\n    else this.setState({ component: \"form\" });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.component === \"form\" ? (\n          <AddressForm toggleComponent={this.toggleComponent.bind(this)} />\n        ) : (\n          <Main toggleComponent={this.toggleComponent.bind(this)} />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { makchaApi } from \"../api\";\nimport { Container, Text } from \"../Components/common\";\n\nconst { TextArea } = Input;\n\nconst Textcontainer = styled.div`\n  flex: 2;\n  justify-content: space-around;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\nconst FeedbackContainer = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  flex: 6;\n  color: white;\n  justify-content: space-around;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  justify-content: center;\n  height: inherit;\n  width: 100%;\n`;\n\nconst StyledTextArea = styled(TextArea)`\n  line-height: 2rem;\n  background: #000033;\n  border-bottom: 1px solid #fff;\n  color: white;\n  font-size: 1.2rem;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex: 2;\n  justify-content: center;\n  align-items: flex-end;\n  padding: 1rem;\n`;\n\nclass Feedback extends Component {\n  state = {};\n\n  componentDidMount() {\n    let Uid = localStorage.getItem(\"Uid\");\n    this.setState({ Uid });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let formData = new FormData();\n        formData.append(\"feedback\", values.feedback);\n        formData.append(\"Uid\", this.state.Uid);\n        makchaApi.postFeedback(formData);\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Container style={{ background: \"#000033\" }}>\n        <Textcontainer>\n          <Text size=\"extraLargeFontSize\" weight=\"bold\">\n            피드백\n          </Text>\n          <Text>추가되면 좋을 기능이나 개선할 사항을 알려주세요~</Text>\n        </Textcontainer>\n        <FeedbackContainer>\n          <StyledForm>\n            {getFieldDecorator(\"feedback\", {\n              rules: [{ required: false, message: \"사용해 보니 어땠나요?\" }]\n            })(\n              <StyledTextArea\n                placeholder=\"피드백을 입력해주세요\"\n                // onPressEnter={this.handleSubmit}\n                autosize={{ minRows: 1, maxRows: 5 }}\n                style={{\n                  border: \"none\",\n                  borderBottom: \"1px solid #fff\"\n                  // textAlign: \"center\"\n                }}\n              />\n            )}\n          </StyledForm>\n        </FeedbackContainer>\n        <ButtonContainer>\n          <Button\n            shape=\"round\"\n            type=\"ghost\"\n            style={{ background: \"white\", color: \"#000033\" }}\n            block\n            onClick={this.handleSubmit}\n          >\n            <Link to=\"/\">확인</Link>\n          </Button>\n          <Button shape=\"round\" type=\"ghost\" style={{ color: \"white\" }} block>\n            <Link to=\"/\">취소</Link>\n          </Button>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Form.create({ name: \"feedback\" })(Feedback);\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GlobalStyle } from \"./Styles/global_styles\";\nimport Landing from \"./Routes/Landing\";\nimport Feedback from \"./Routes/Feedback\";\n\nconst AppContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <AppContainer className=\"app\">\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/feedback\" component={Feedback} />\n        </AppContainer>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// const makchaCache = \"makcha-1.0.1\";\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}