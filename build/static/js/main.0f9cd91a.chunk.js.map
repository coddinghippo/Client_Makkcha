{"version":3,"sources":["config/keys.js","Styles/global_styles.js","api.js","Components/AddressForm.jsx","Styles/_mixin.js","Components/OptinList.jsx","Components/common/index.js","Components/MakchaDetail.jsx","Components/Main.jsx","Routes/Landing.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","KakaoAK","GlobalStyle","createGlobalStyle","_templateObject","reset","api","axios","create","baseURL","kakaoApi","headers","Authorization","concat","keys","makchaApi","getData","_ref","startX","startY","endX","endY","get","getPosFromGPS","x","y","getPosFromAddr","addr","getPosFromKeyword","keyword","Item","Form","Container","styled","div","AddressForm_templateObject","StyledForm","_templateObject2","StyledItem","_templateObject3","StyledInput","Input","_templateObject4","ButtonContainer","_templateObject5","StyledButton","Button","_templateObject6","AddressForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","getPos","address","this","searchVal","Promise","race","resolve","then","res","data","documents","length","result","endLocation","address_name","localStorage","setItem","JSON","stringify","toggleComponent","_this$props$form","getFieldDecorator","getFieldError","addressError","isFieldTouched","react_default","a","createElement","validateStatus","help","rules","required","message","placeholder","type","onClick","Component","name","sizes","fontSize","smallFontSize","normalFontSize","largeFontSize","extraLargeFontSize","lineColors","도보","1","2","3","4","5","6","7","8","9","kyeongkang","kyung","chun","kong","bun","서해선","suin","sinbun","yongin","우이신설경전철","경전철의정부","in","in2","customMediaQuery","maxWidth","OptinList_templateObject","Card","OptinList_templateObject2","BarContainer","OptinList_templateObject3","Bar","OptinList_templateObject4","TextContainer","OptinList_templateObject5","Text","p","OptinList_templateObject6","_templateObject7","_templateObject8","OptinList","Object","classCallCheck","_this$props","possibleConstructorReturn","getPrototypeOf","call","taxiInfo","subwayPathOptionList","defaultInfo","state","runTime","total","prevProps","prevState","_this$props$data","getTime","setState","idx","pathStationList","routeList","cum","runTimeObj","map","item","time","parseInt","slice","line","forEach","key","_this$state$runTime","results","Math","floor","Number","String","push","className","uuidv1","style","width","backgroundColor","color","_this$state","_this$state$runTime2","OptinList_Container","speed","horizontal","lastTime","marginBottom","renderBar","marginTop","distance","toFixed","price","OptinList_ButtonContainer","OptinList_StyledButton","size","onButtonPress","common_templateObject","weight","lineChar","Countdown","Statistic","MakchaDetail_templateObject","LocContainer","MakchaDetail_templateObject2","TimerContainer","MakchaDetail_templateObject3","InfoContainer","MakchaDetail_templateObject4","LineIcon","MakchaDetail_templateObject5","LineInner","MakchaDetail_templateObject6","MakchaDetail_templateObject7","MakchaDetail","remain","deadline","Date","now","_defaultInfo$pathStat","startStationName","endStationName","Fragment","icon","theme","marginRight","common_Text","value","onFinish","valueStyle","marginLeft","MakchaDetail_StyledButton","shape","window","alert","MakchaDetail_Container","renderDetail","Main_templateObject","ContentContainer","Main_templateObject2","MakchaContainer","Main_templateObject3","SpinContainer","Main_templateObject4","Main_templateObject5","antIcon","spin","Main","currentAddr","_this2","getItem","_JSON$parse$endLocati","parse","navigator","geolocation","getCurrentPosition","pos","_pos$coords","coords","latitude","longitude","getCurrentPosFromGPS","_this3","_this$state2","objectSpread","_this4","_this$state$data","Main_Container","MakchaDetail_MakchaDetail","OptinList_OptinList","bind","indicator","Main_StyledButton","Landing_templateObject","Landing","component","Landing_Container","Components_AddressForm","Main_Main","AppContainer","App_templateObject","App","react_router_dom","react_router","exact","path","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f9cd91a.chunk.js","sourcesContent":["module.exports = {\n  KakaoAK: \"608b513f89e46075473ef312d8ea7a39\"\n};\n","import reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n${reset};\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.6/antd.min.css\");\n\n* {\n    box-sizing: border-box;\n}\n\nbody{\n  font-family: 'Nanum Gothic', sans-serif;\n}\n\n#root{\n  width: 100%;\n  height: 100%;\n}\n\na{\n  color: unset;\n  &:hover{\n    color: unset;\n  }\n}\n\nstrong{\n  font-weight: 700;\n}\n\nbutton{\n  cursor: pointer;\n  background-color: white;\n  outline: none;\n  border: none;\n  &:active {\n    outline: none;\n    border: none;\n  }\n}\n`;\n","import axios from \"axios\";\nimport keys from \"./config/keys\";\n\nconst api = axios.create({\n  baseURL: \"https://api.makkcha.com/\"\n});\n\nconst kakaoApi = axios.create({\n  baseURL: \"https://dapi.kakao.com/v2/local/\",\n  headers: { Authorization: `KakaoAK ${keys.KakaoAK}` }\n});\n\nexport const makchaApi = {\n  getData: ({ startX, startY, endX, endY }) =>\n    api.get(\n      `searchMakcha?startX=${startX}&startY=${startY}&endX=${endX}&endY=${endY}`\n    ),\n  getPosFromGPS: (x, y) =>\n    kakaoApi.get(`geo/coord2address.json?x=${x}&y=${y}&input_coord=WGS84`),\n  getPosFromAddr: addr => kakaoApi.get(`search/address.json?query=${addr}`),\n  getPosFromKeyword: keyword =>\n    kakaoApi.get(`search/keyword.json?query=${keyword}`)\n};\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { makchaApi } from \"../api\";\n\nconst { Item } = Form;\n\nconst Container = styled.div`\n  background: #000033;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledItem = styled(Item)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 15rem;\n  border: none;\n  background: #000033;\n  text-align: center;\n  color: white;\n  border-bottom: 1px solid white;\n  &#address_address {\n    border-bottom: 1px solid white;\n  }\n  transition: none;\n  border-radius: 0;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  postion: fixed;\n  bottom: 0;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 2.2rem;\n  color: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n`;\n\nclass AddressForm extends Component {\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  getPos(searchVal) {\n    function posFromAddr() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromAddr(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    function posFromKeyword() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromKeyword(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    Promise.race([posFromAddr(), posFromKeyword()])\n      .then(result => {\n        const endLocation = { endX: result[0].x, endY: result[0].y };\n        const addr = result[0].address_name;\n        localStorage.setItem(\"loc\", JSON.stringify({ endLocation, addr }));\n      })\n      .then(this.props.toggleComponent);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.getPos(values.address);\n      } else console.log(err);\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const addressError = isFieldTouched(\"address\") && getFieldError(\"address\");\n\n    return (\n      <Container>\n        <StyledForm>\n          <StyledItem\n            validateStatus={addressError ? \"error\" : \"\"}\n            help={addressError || \"\"}\n          >\n            {getFieldDecorator(\"address\", {\n              rules: [{ required: false, message: \"집 주소를 입력해 주세요!\" }]\n            })(<StyledInput placeholder=\"집 주소 입력\" />)}\n          </StyledItem>\n        </StyledForm>\n        <ButtonContainer>\n          <StyledButton type=\"secondary\" onClick={this.handleSubmit}>\n            확인\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Form.create({ name: \"address\" })(AddressForm);\n","// sizes for media queries\nconst sizes = {\n  desktop: 922,\n  tablet: 768,\n  phone: 576\n};\n\nexport const fontSize = {\n  smallFontSize: \"0.7rem\",\n  normalFontSize: \"1rem\",\n  largeFontSize: \"1.2rem\",\n  extraLargeFontSize: \"3rem\"\n};\n\nexport const lineColors = {\n  도보: \"#ccc\",\n  \"1\": \"#052f93\",\n  \"2\": \"#10a643\",\n  \"3\": \"#ea8406\",\n  \"4\": \"#00a8e6\",\n  \"5\": \"#a95094\",\n  \"6\": \"#d08d1a\",\n  \"7\": \"#657931\",\n  \"8\": \"#e74e6d\",\n  \"9\": \"#be941c\",\n  kyeongkang: \"#004ea7\",\n  kyung: \"#79c0a0\",\n  chun: \"#33C7A7\",\n  kong: \"#038fa0\",\n  bun: \"#fcd204\",\n  서해선: \"#8be800\",\n  suin: \"#fbb901\",\n  sinbun: \"#cd2234\",\n  yongin: \"#56ab32\",\n  우이신설경전철: \"#b7b7b7\",\n  경전철의정부: \"#f6ba02\",\n  in: \"#6496df\",\n  in2: \"#fd9800\"\n};\n\nexport const headerHeight = \"3rem\";\n\nexport const color = { bgColor: \"#141414\", fontColor: \"#000\" };\n\nconst customMediaQuery = maxWidth => `@media (max-width: ${maxWidth}px)`;\n\nexport const media = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(sizes.desktop),\n  tablet: customMediaQuery(sizes.tablet),\n  phone: customMediaQuery(sizes.phone)\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport uuidv1 from \"uuid/v1\";\nimport { lineColors } from \"../Styles/_mixin\";\nimport { parse } from \"@babel/core\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Card = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst BarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n  width: 90%;\n  max-width: 90%;\n  height: 1rem;\n  background: sky-blue;\n  // &:first-child {\n  //   border-top-left-radius: 5px;\n  //   border-bottom-left-radius: 5px;\n  // }\n`;\n\nconst Bar = styled.div`\n  text-align: center;\n  height: 20px;\n  &:first-of-type {\n    border-top-left-radius: 3rem;\n    border-bottom-left-radius: 3rem;\n  }\n  &:last-of-type {\n    border-top-right-radius: 3rem;\n    border-bottom-right-radius: 3rem;\n  }\n`;\n\nconst TextContainer = styled.div`\n  width: 90%;\n  margin: 1rem 0;\n`;\n\nconst Text = styled.p`\n  margin: 0.5rem 0;\n  width: 90%;\n  font-weight: 700;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  width: 100%;\n  bottom: 0;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: white;\n  background: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n`;\n\nexport default class OptinList extends Component {\n  constructor(props) {\n    super(props);\n    const { taxiInfo, subwayPathOptionList, defaultInfo } = this.props;\n    this.state = {\n      taxiInfo,\n      subwayPathOptionList,\n      defaultInfo,\n      runTime: { total: null, runTime: {} }\n    };\n  }\n\n  // // Json-server Option\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.taxiInfo !== this.props.taxiInfo) {\n      const { taxiInfo, subwayPathOptionList } = this.props.data;\n      this.getTime(0);\n      this.setState({ taxiInfo, subwayPathOptionList });\n    }\n  }\n\n  getTime(idx) {\n    // get routeList idx as a param\n    const { pathStationList } = this.state.subwayPathOptionList.routeList[idx];\n\n    // store sum of runTime for each line\n    let cum = 0;\n    let runTimeObj = {};\n    pathStationList.map(item => {\n      let time = item.runTime;\n      if (time !== null) {\n        time = parseInt(time.slice(0, 2)) * 60 + parseInt(time.slice(3));\n        cum += time;\n        runTimeObj[item.line] = cum;\n      } else {\n        runTimeObj[item.line] = cum;\n        cum = 0;\n      }\n    });\n    let total = 0;\n    Object.keys(runTimeObj).forEach(key => (total += runTimeObj[key]));\n    this.setState({ runTime: { runTime: runTimeObj, total } });\n  }\n\n  renderBar() {\n    const { total, runTime } = this.state.runTime;\n    const results = [];\n    Object.keys(runTime).forEach(key => {\n      // console.log(runTime[key], total);\n      let length = Math.floor((Number(runTime[key]) / total) * 100);\n      // if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      results.push(\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length,\n            backgroundColor: lineColors[key],\n            color: \"white\"\n          }}\n        >\n          {Math.floor(runTime[key] / 60)}분\n        </Bar>\n      );\n    });\n    return results.map(item => item);\n  }\n\n  // renderStn() {\n  //   const makcha = this.state.makcha;\n  //   const totalTime = makcha.reduce((a, x) => a + x.time, 0);\n\n  //   return makcha.map((item, idx) => {\n  //     let length = Math.floor((Number(item.time) / totalTime) * 100);\n  //     if (length < 24) length = 24;\n  //     length = String(length) + \"%\";\n  //     return (\n  //       <Bar\n  //         key={uuidv1()}\n  //         style={{\n  //           width: length,\n  //           color: \"black\",\n  //           textAlign: \"left\"\n  //         }}\n  //       >\n  //         <span style={{ fontSize: 8 }}>\n  //           {item.routeNm === \"도보\" ? \"도보\" : item.fname}\n  //         </span>\n  //       </Bar>\n  //     );\n  //   });\n\n  // }\n\n  render() {\n    // console.log(this.state.defaultOption);\n    // Object.keys(this.props).forEach(key => console.log(this.props[key]));\n    const { taxiInfo, defaultInfo } = this.state;\n    const { total, runTime } = this.state.runTime;\n    // const totalTime = makcha.reduce((a, x) => a + x.time, 0);\n    // const totalDistance = makcha.reduce((a, x) => a + x.distance, 0) / 1000;\n    // const { lastTimeList } = this.state.route;\n    // if (this.state.subwayPathOptionList) this.getTime(0);\n    console.log(this.state);\n    // console.log(this.state);\n    return (\n      <Container speed={0.8} horizontal={false}>\n        <Card>\n          <TextContainer>\n            <Text>\n              지하철 {Math.floor(total / 60)}분 | 막차 {defaultInfo.lastTime}\n            </Text>\n            {/* <p>\n              {totalDistance.toFixed(1)}km |{\" \"}\n              {String(Math.floor(this.state.route.price / 1000)) +\n                \",\" +\n                String(this.state.route.price % 1000)}\n              원 | {makcha[0].time}분\n            </p> */}\n          </TextContainer>\n          <BarContainer className=\"nana\" style={{ marginBottom: 0 }}>\n            {this.renderBar()}\n          </BarContainer>\n          <BarContainer style={{ marginTop: 0 }}>\n            {/* {this.renderStn()} */}\n          </BarContainer>\n        </Card>\n\n        {/* <Card makcha={makcha} route={route} />\n        <Card makcha={makcha} route={route} /> */}\n\n        <Card>\n          <TextContainer>\n            <Text>택시 {taxiInfo.time}분</Text>\n            <p>\n              {(taxiInfo.distance / 1000).toFixed(1)}km | 약{\" \"}\n              {String(Math.floor(taxiInfo.price / 1000)) +\n                \",\" +\n                String(taxiInfo.price % 1000)}\n              원\n            </p>\n          </TextContainer>\n          <BarContainer>\n            <Bar\n              style={{\n                width: \"100%\",\n                backgroundColor: \"#ffd300\",\n                color: \"white\"\n              }}\n            >\n              {taxiInfo.time}분\n            </Bar>\n          </BarContainer>\n        </Card>\n        <ButtonContainer>\n          <StyledButton size=\"large\" onClick={this.props.onButtonPress}>\n            목적지 재설정\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n","import styled from \"styled-components\";\nimport { fontSize } from \"../../Styles/_mixin\";\n\nexport const Text = styled.p`\n  font-size: ${props => fontSize[props.size] || fontSize.normalFontSize};\n  font-weight: ${props => props.weight};\n`;\n\nexport const lineChar = {\n  \"1\": \"1\",\n  \"2\": \"2\",\n  \"3\": \"3\",\n  \"4\": \"4\",\n  \"5\": \"5\",\n  \"6\": \"6\",\n  \"7\": \"7\",\n  \"8\": \"8\",\n  \"9\": \"9\",\n  kyeongkang: \"경강\",\n  kyung: \"중앙\",\n  chun: \"경춘\",\n  kong: \"공항\",\n  bun: \"분\",\n  서해선: \"서해\",\n  suin: \"수인\",\n  sinbun: \"신분\",\n  yongin: \"용인\",\n  우이신설경전철: \"우이\",\n  경전철의정부: \"의정\",\n  in: \"인1\",\n  in2: \"인2\"\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Statistic, Icon } from \"antd\";\nimport { fontSize, lineColors } from \"../Styles/_mixin\";\nimport { lineChar, Text } from \"./common\";\n\nconst { Countdown } = Statistic;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  color: white;\n  flex: inherit;\n  background: #000033;\n`;\n\nconst LocContainer = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex: 2;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst LineIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 3rem;\n  background: white;\n  margin-right: 1rem;\n`;\n\nconst LineInner = styled.div`\n  width: 2.4rem;\n  height: 2.4rem;\n  border-radius: 2.4rem;\n  background: ${props => lineColors[props.line]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n  color: white;\n  position: absolute;\n  right: 1rem;\n`;\n\nexport default class MakchaDetail extends Component {\n  constructor(props) {\n    super(props);\n    const { defaultInfo, addr } = props;\n    this.state = {\n      defaultInfo,\n      remain: defaultInfo.remain || 0,\n      addr\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.defaultInfo !== this.props.defaultInfo ||\n      prevProps.addr !== this.props.addr\n    ) {\n      const { defaultInfo, addr } = this.props;\n      this.setState({ defaultInfo, addr, remain: defaultInfo.remain });\n    }\n  }\n\n  onFinish() {\n    console.log(`Finished`);\n  }\n\n  renderDetail() {\n    const { defaultInfo, remain, addr } = this.state;\n    const deadline = Date.now() + 1000 * remain;\n\n    if (remain) {\n      const {\n        startStationName,\n        line,\n        endStationName\n      } = defaultInfo.pathStationList[0];\n\n      return (\n        <>\n          <LocContainer>\n            <Icon\n              type=\"environment\"\n              theme=\"filled\"\n              style={{ marginRight: \"1rem\" }}\n            />\n            <Text size=\"normalFontSize\">{addr}</Text>\n          </LocContainer>\n\n          <TimerContainer>\n            <>\n              <Text size=\"largeFontSize\" weight=\"bold\">\n                막차까지\n              </Text>\n              <Countdown\n                value={deadline}\n                onFinish={this.onFinish}\n                valueStyle={{\n                  color: \"white\",\n                  fontSize: fontSize.extraLargeFontSize\n                }}\n              />\n            </>\n          </TimerContainer>\n\n          <InfoContainer>\n            <LineIcon>\n              <LineInner line={line}>{lineChar[line]}</LineInner>\n            </LineIcon>\n            <Text size=\"largeFontSize\" weight=\"bold\">\n              {startStationName + \"역\"}\n            </Text>\n            <Text size=\"smallFontSize\" style={{ marginLeft: \"0.6rem\" }}>\n              {endStationName + \" 방향\"}\n            </Text>\n\n            <StyledButton\n              type=\"ghost\"\n              shape=\"round\"\n              onClick={() => window.alert(\"알림을 설정했습니다\")}\n            >\n              알림 받기\n            </StyledButton>\n          </InfoContainer>\n        </>\n      );\n    } else return null;\n  }\n\n  render() {\n    return <Container>{this.renderDetail()}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Spin, Icon, Button } from \"antd\";\nimport OptinList from \"./OptinList\";\nimport MakchaDetail from \"./MakchaDetail\";\nimport keys from \"../config/keys\";\nimport { Text } from \"./common\";\nimport { makchaApi } from \"../api\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst ContentContainer = styled.div`\n  flex: 10;\n  display: flex;\n  justify-content: center;\n  & .anticon-spin {\n    position: absolute;\n    top: 3rem;\n  }\n`;\n\nconst MakchaContainer = styled.div`\n  display: flex;\n  flex: 4;\n`;\n\nconst SpinContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  height: 80%;\n  color: #000033;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: white;\n  background: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n`;\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endX: 126.91509963231,\n      endY: 37.568565387939,\n      currentAddr: \"확인중...\",\n      startX: \"\",\n      startY: \"\",\n      data: {\n        taxiInfo: {},\n        subwayPathOptionList: { routeList: [] },\n        defaultInfo: {}\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loc\")) {\n      const { endX, endY } = JSON.parse(\n        localStorage.getItem(\"loc\")\n      ).endLocation;\n      this.setState({ endX, endY });\n    }\n    // // Json-server Option\n    // this.getTrainData(0, 0);\n\n    // Original\n    navigator.geolocation.getCurrentPosition(pos => {\n      const { latitude, longitude } = pos.coords;\n      this.setState({ startX: longitude, startY: latitude });\n      this.getData(latitude, longitude);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.startX !== this.state.startX) {\n      const { startX, startY } = this.state;\n      this.getData(startY, startX);\n      this.getCurrentPosFromGPS(startX, startY);\n    }\n  }\n\n  getData(startY, startX) {\n    const { endX, endY } = this.state;\n\n    makchaApi.getData({ startX, startY, endX, endY }).then(res =>\n      this.setState({\n        data: {\n          ...res.data,\n          defaultInfo: res.data.subwayPathOptionList.routeList[0] || {}\n        }\n      })\n    );\n  }\n\n  getCurrentPosFromGPS(x, y) {\n    makchaApi.getPosFromGPS(x, y).then(res => {\n      this.setState({\n        currentAddr: res.data.documents[0].address.address_name\n      });\n    });\n  }\n\n  onButtonPress() {\n    localStorage.setItem(\"loc\", \"\");\n    this.props.toggleComponent();\n  }\n\n  render() {\n    const { taxiInfo, subwayPathOptionList, defaultInfo } = this.state.data;\n    const { currentAddr } = this.state;\n    return (\n      <Container>\n        <MakchaContainer>\n          <MakchaDetail defaultInfo={defaultInfo} addr={currentAddr} />\n        </MakchaContainer>\n        <ContentContainer>\n          {subwayPathOptionList.routeList.length ? (\n            <OptinList\n              taxiInfo={taxiInfo}\n              subwayPathOptionList={subwayPathOptionList}\n              defaultInfo={subwayPathOptionList.routeList[0]}\n              data={this.state.data}\n              onButtonPress={this.onButtonPress.bind(this)}\n            />\n          ) : (\n            <SpinContainer>\n              <Spin indicator={antIcon} />\n              <Text size=\"largeFontSize\">경로를 탐색 중입니다...</Text>\n              <StyledButton onClick={this.onButtonPress.bind(this)}>\n                목적지 다시 입력하기\n              </StyledButton>\n            </SpinContainer>\n          )}\n        </ContentContainer>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AddressForm from \"../Components/AddressForm\";\nimport styled from \"styled-components\";\nimport Main from \"../Components/Main\";\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nclass Landing extends Component {\n  state = {\n    component: \"form\"\n  };\n\n  componentDidMount() {\n    const addr = localStorage.getItem(\"loc\");\n    if (addr) this.setState({ component: \"main\" });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) console.log(this.props);\n  }\n\n  toggleComponent() {\n    const { component } = this.state;\n    if (component === \"form\") this.setState({ component: \"main\" });\n    else this.setState({ component: \"form\" });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.component === \"form\" ? (\n          <AddressForm toggleComponent={this.toggleComponent.bind(this)} />\n        ) : (\n          <Main toggleComponent={this.toggleComponent.bind(this)} />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GlobalStyle } from \"./Styles/global_styles\";\nimport Landing from \"./Routes/Landing\";\n\nconst AppContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <AppContainer className=\"app\">\n          <Route exact path=\"/\" component={Landing} />\n        </AppContainer>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}