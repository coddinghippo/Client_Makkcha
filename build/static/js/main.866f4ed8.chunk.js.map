{"version":3,"sources":["config/keys.js","Styles/global_styles.js","api/data_handler.js","api/index.js","Styles/_mixin.js","Components/common/index.js","Components/AddressForm.jsx","Components/TaxiCard.jsx","Components/SubwayCard.jsx","Components/OptinList.jsx","Components/MakchaDetail.jsx","Components/Main.jsx","Routes/Landing.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","KakaoAK","GlobalStyle","createGlobalStyle","_templateObject","reset","dataHandler","data","sub","busAndSubwayPathOptionList","busPathOptionList","taxiInfo","subwayPathOptionList","console","log","defaultSub","routeList","taxi","walkInfo","routes","_loop","idx","_subwayPathOptionList","Number","pathStationList","distance","price","runTimeArr","type","time","cum","map","item","runTime","line","parseInt","slice","push","length","total","reduce","a","x","Object","objectSpread","handleSub","busNSub","bus","Uid","uuidv1","api","axios","create","baseURL","headers","kakaoApi","Authorization","concat","keys","makchaApi","getData","_ref","startX","startY","endX","endY","get","getPosFromGPS","y","getPosFromAddr","addr","getPosFromKeyword","keyword","sizes","fontSize","smallFontSize","normalFontSize","largeFontSize","extraLargeFontSize","lineColors","도보","1","2","3","4","5","6","7","8","9","kyeongkang","kyung","chun","kong","bun","서해선","suin","sinbun","yongin","우이신설경전철","경전철의정부","in","in2","lineChar","customMediaQuery","maxWidth","Text","styled","p","common_templateObject","props","size","weight","lineHeight","Card","div","_templateObject2","BarContainer","_templateObject3","Bar","_templateObject4","TextContainer","_templateObject5","Container","_templateObject6","Item","Form","DefaultContainer","AddressForm_templateObject","StyledForm","AddressForm_templateObject2","StyledItem","AddressForm_templateObject3","StyledInput","Input","AddressForm_templateObject4","ButtonContainer","AddressForm_templateObject5","StyledButton","Button","AddressForm_templateObject6","AddressForm","handleSubmit","e","preventDefault","_this","form","validateFields","err","values","getPos","address","this","searchVal","Promise","race","resolve","then","res","documents","result","endLocation","address_name","localStorage","setItem","JSON","stringify","toggleComponent","_this$props$form","getFieldDecorator","getFieldError","addressError","isFieldTouched","react_default","createElement","AddressForm_Container","validateStatus","help","rules","required","message","placeholder","onPressEnter","onClick","Component","name","TaxiCard","toFixed","String","Math","floor","style","width","backgroundColor","color","SubwayCard","lastTime","className","marginBottom","key","renderEachSubwayBar","marginTop","OptinList_templateObject","OptinList_templateObject2","OptinList","classCallCheck","_this$props","possibleConstructorReturn","getPrototypeOf","call","state","_this$state","route","Components_SubwayCard","renderSubwayRoutes","Components_TaxiCard","OptinList_ButtonContainer","OptinList_StyledButton","onButtonPress","Countdown","Statistic","MakchaDetail_templateObject","LocContainer","MakchaDetail_templateObject2","TimerContainer","MakchaDetail_templateObject3","Textcontainer","MakchaDetail_templateObject4","InfoContainer","MakchaDetail_templateObject5","LineIcon","MakchaDetail_templateObject6","LineInner","_templateObject7","_templateObject8","MakchaDetail","remain","prevProps","prevState","defaultInfo","setState","deadline","Date","now","_defaultSub$pathStati","startStationName","endStationName","Fragment","icon","theme","marginRight","value","onFinish","valueStyle","marginLeft","MakchaDetail_StyledButton","shape","window","alert","MakchaDetail_Container","renderDetail","ContentContainer","Main_templateObject","MakchaContainer","Main_templateObject2","SpinContainer","Main_templateObject3","Main_templateObject4","antIcon","spin","Main","currentPos","_this2","getItem","_JSON$parse$endLocati","parse","navigator","geolocation","getCurrentPosition","pos","_pos$coords","coords","latitude","longitude","_this$state$currentPo","getCurrentPosFromGPS","_this3","_this$state$currentPo2","_dataHandler","_this4","MakchaDetail_MakchaDetail","OptinList_OptinList","bind","indicator","Main_StyledButton","renderMain","Landing","component","Components_AddressForm","Main_Main","AppContainer","App_templateObject","App","react_router_dom","react_router","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.866f4ed8.chunk.js","sourcesContent":["module.exports = {\n  KakaoAK: \"608b513f89e46075473ef312d8ea7a39\"\n};\n","import reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n${reset};\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.6/antd.min.css\");\n\n* {\n    box-sizing: border-box;\n}\nhtml {\n  font-size: 16px;\n}\n\nbody{\n  font-family: 'Nanum Gothic', sans-serif;\n}\n\n#root{\n  width: 100%;\n  height: 100%;\n}\n\na{\n  color: unset;\n  &:hover{\n    color: unset;\n  }\n}\n\nstrong{\n  font-weight: 700;\n}\n\nbutton{\n  cursor: pointer;\n  background-color: white;\n  outline: none;\n  border: none;\n  &:active {\n    outline: none;\n    border: none;\n  }\n}\n`;\n","export const dataHandler = data => {\n  const {\n    busAndSubwayPathOptionList,\n    busPathOptionList,\n    taxiInfo,\n    subwayPathOptionList\n  } = data;\n  console.log(data);\n  // if (subwayPathOptionList) {\n  let sub, busNSub, bus;\n  const defaultSub = subwayPathOptionList\n    ? subwayPathOptionList.routeList[0]\n    : null;\n  const taxi = taxiInfo;\n\n  function handleSub() {\n    const { routeList, walkInfo } = subwayPathOptionList;\n    const routes = [];\n\n    for (let idx = 0; idx < routeList.length; idx++) {\n      let { pathStationList, distance, price } = subwayPathOptionList.routeList[\n        Number(idx)\n      ];\n      let runTimeArr = [{ type: \"도보\", time: walkInfo.time * 60 }];\n\n      // store sum of runTime for each line\n      let cum = 0;\n      pathStationList.map(item => {\n        let time = item.runTime;\n        let type = item.line;\n        if (time !== null) {\n          time = parseInt(time.slice(0, 2)) * 60 + parseInt(time.slice(3));\n          cum += time;\n          return null;\n        } else {\n          runTimeArr.push({ type, time: cum });\n          cum = 0;\n          return null;\n        }\n      });\n\n      runTimeArr.push({\n        type: pathStationList[pathStationList.length - 1].line,\n        time: cum\n      });\n\n      let total = runTimeArr.reduce((a, x) => {\n        return a + x.time;\n      }, 0);\n      total += walkInfo.time;\n\n      routes.push({ runTime: runTimeArr, total, distance, price });\n    }\n    sub = { ...subwayPathOptionList, routes, walkInfo };\n  }\n\n  function handleBusNSub() {\n    busNSub = busAndSubwayPathOptionList;\n  }\n  function handleBus() {\n    bus = busPathOptionList;\n  }\n\n  function main() {\n    handleSub();\n    handleBusNSub();\n    handleBus();\n  }\n\n  main();\n  return { taxi, sub, busNSub, bus, defaultSub };\n  // } else return null;\n};\n","import axios from \"axios\";\nimport keys from \"../config/keys\";\nimport uuidv1 from \"uuid/v1\";\nimport { dataHandler } from \"./data_handler\";\n\n// Use json-server db when in dev env\nlet apiURL = \"https://api.makkcha.com/\";\n// if (process.env.NODE_ENV === \"development\") apiURL = \"http://localhost:3004\";\n\nconst Uid = uuidv1();\n\nconst api = axios.create({\n  baseURL: apiURL,\n  headers: { Uid }\n});\n\nconsole.log(Uid);\n\nconst kakaoApi = axios.create({\n  baseURL: \"https://dapi.kakao.com/v2/local/\",\n  headers: { Authorization: `KakaoAK ${keys.KakaoAK}` }\n});\n\nexport const makchaApi = {\n  getData: ({ startX, startY, endX, endY }) =>\n    api.get(\n      `searchMakcha?startX=${startX}&startY=${startY}&endX=${endX}&endY=${endY}`\n    ),\n  getPosFromGPS: (x, y) =>\n    kakaoApi.get(`geo/coord2address.json?x=${x}&y=${y}&input_coord=WGS84`),\n  getPosFromAddr: addr => kakaoApi.get(`search/address.json?query=${addr}`),\n  getPosFromKeyword: keyword =>\n    kakaoApi.get(`search/keyword.json?query=${keyword}`)\n};\n\nexport { dataHandler };\n","// sizes for media queries\nconst sizes = {\n  desktop: 922,\n  tablet: 768,\n  phone: 576\n};\n\nexport const fontSize = {\n  smallFontSize: \"0.7rem\",\n  normalFontSize: \"1rem\",\n  largeFontSize: \"1.2rem\",\n  extraLargeFontSize: \"3rem\"\n};\n\nexport const lineColors = {\n  도보: \"#ccc\",\n  \"1\": \"#052f93\",\n  \"2\": \"#10a643\",\n  \"3\": \"#ea8406\",\n  \"4\": \"#00a8e6\",\n  \"5\": \"#a95094\",\n  \"6\": \"#d08d1a\",\n  \"7\": \"#657931\",\n  \"8\": \"#e74e6d\",\n  \"9\": \"#be941c\",\n  kyeongkang: \"#004ea7\",\n  kyung: \"#79c0a0\",\n  chun: \"#33C7A7\",\n  kong: \"#038fa0\",\n  bun: \"#fcd204\",\n  서해선: \"#8be800\",\n  suin: \"#fbb901\",\n  sinbun: \"#cd2234\",\n  yongin: \"#56ab32\",\n  우이신설경전철: \"#b7b7b7\",\n  경전철의정부: \"#f6ba02\",\n  in: \"#6496df\",\n  in2: \"#fd9800\"\n};\n\nexport const lineChar = {\n  \"1\": \"1\",\n  \"2\": \"2\",\n  \"3\": \"3\",\n  \"4\": \"4\",\n  \"5\": \"5\",\n  \"6\": \"6\",\n  \"7\": \"7\",\n  \"8\": \"8\",\n  \"9\": \"9\",\n  kyeongkang: \"경강\",\n  kyung: \"중앙\",\n  chun: \"경춘\",\n  kong: \"공항\",\n  bun: \"분\",\n  서해선: \"서해\",\n  suin: \"수인\",\n  sinbun: \"신분\",\n  yongin: \"용인\",\n  우이신설경전철: \"우이\",\n  경전철의정부: \"의정\",\n  in: \"인1\",\n  in2: \"인2\"\n};\n\nexport const headerHeight = \"3rem\";\n\nexport const color = { bgColor: \"#141414\", fontColor: \"#000\" };\n\nconst customMediaQuery = maxWidth => `@media (max-width: ${maxWidth}px)`;\n\nexport const media = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(sizes.desktop),\n  tablet: customMediaQuery(sizes.tablet),\n  phone: customMediaQuery(sizes.phone)\n};\n","import styled from \"styled-components\";\nimport { fontSize } from \"../../Styles/_mixin\";\n\nexport const Text = styled.p`\n  font-size: ${props => fontSize[props.size] || fontSize.normalFontSize};\n  font-weight: ${props => props.weight};\n  line-height: ${props => props.lineHeight || \"1rem\"};\n`;\n\nexport const Card = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const BarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n  width: 90%;\n  max-width: 90%;\n  height: 1rem;\n  background: sky-blue;\n`;\n\nexport const Bar = styled.div`\n  text-align: center;\n  height: 20px;\n  &:first-of-type {\n    border-top-left-radius: 3rem;\n    border-bottom-left-radius: 3rem;\n  }\n  &:last-of-type {\n    border-top-right-radius: 3rem;\n    border-bottom-right-radius: 3rem;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  width: 90%;\n  margin: 1rem 0;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { makchaApi } from \"../api\";\nimport { fontSize } from \"../Styles/_mixin\";\nimport { Container as DefaultContainer } from \"./common\";\n\nconst { Item } = Form;\n\nconst Container = styled(DefaultContainer)`\n  background: #000033;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledItem = styled(Item)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  border: none;\n  background: #000033;\n  text-align: center;\n  color: white;\n  border-bottom: 1px solid white;\n  &#address_address {\n    border-bottom: 1px solid white;\n  }\n  transition: none;\n  border-radius: 0;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  postion: absolute;\n  bottom: 0;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 2.6rem;\n  color: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nclass AddressForm extends Component {\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  getPos(searchVal) {\n    function posFromAddr() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromAddr(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    function posFromKeyword() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromKeyword(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    Promise.race([posFromAddr(), posFromKeyword()])\n      .then(result => {\n        const endLocation = { endX: result[0].x, endY: result[0].y };\n        const addr = result[0].address_name;\n        localStorage.setItem(\"loc\", JSON.stringify({ endLocation, addr }));\n      })\n      .then(this.props.toggleComponent);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.getPos(values.address);\n      } else console.log(err);\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const addressError = isFieldTouched(\"address\") && getFieldError(\"address\");\n\n    return (\n      <Container>\n        <StyledForm>\n          <StyledItem\n            validateStatus={addressError ? \"error\" : \"\"}\n            help={addressError || \"\"}\n          >\n            {getFieldDecorator(\"address\", {\n              rules: [\n                { required: false, message: \"집 근처 역을 입력해 주세요!\" }\n              ]\n            })(\n              <StyledInput\n                placeholder=\"집 근처 역을 입력해 주세요\"\n                onPressEnter={this.handleSubmit}\n              />\n            )}\n          </StyledItem>\n        </StyledForm>\n        <ButtonContainer>\n          <StyledButton type=\"secondary\" onClick={this.handleSubmit}>\n            확인\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Form.create({ name: \"address\" })(AddressForm);\n","import React from \"react\";\nimport { Card, Text, BarContainer, Bar, TextContainer } from \"./common\";\n\nconst TaxiCard = props => {\n  const { taxi } = props;\n\n  return (\n    <Card>\n      <TextContainer>\n        <Text weight=\"bold\" lineHeight=\"2rem\">\n          택시 {taxi.time}분\n        </Text>\n        <Text>\n          {(taxi.distance / 1000).toFixed(1)}km | 약{\" \"}\n          {String(Math.floor(taxi.price / 1000)) +\n            \",\" +\n            String(taxi.price % 1000)}\n          원\n        </Text>\n      </TextContainer>\n      <BarContainer>\n        <Bar\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#ffd300\",\n            color: \"white\"\n          }}\n        >\n          {taxi.time}분\n        </Bar>\n      </BarContainer>\n    </Card>\n  );\n};\n\nexport default TaxiCard;\n","import React from \"react\";\nimport uuidv1 from \"uuid/v1\";\nimport { lineColors } from \"../Styles/_mixin\";\nimport { Card, Text, BarContainer, Bar, TextContainer } from \"./common\";\n\nconst SubwayCard = props => {\n  const { defaultSub, walkInfo, total, price, runTime } = props;\n\n  // Render SubwayBar for each route\n  const renderEachSubwayBar = (total, runTime) => {\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / total) * 100);\n      if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length,\n            backgroundColor: lineColors[item.type],\n            color: \"white\"\n          }}\n        >\n          {item.type === \"도보\" ? \"도보\" : null}\n          {Math.floor(Number(item.time) / 60)}분\n        </Bar>\n      );\n    });\n  };\n\n  return (\n    <Card>\n      <TextContainer>\n        <Text weight=\"bold\" lineHeight=\"2rem\">\n          지하철 {Math.floor(total / 60)}분\n        </Text>\n        <Text weight=\"normal\">\n          {String(Math.floor(price / 1000)) + \",\" + String(price % 1000)}원 |\n          막차 {defaultSub.lastTime.slice(0, 5)} | 도보 {walkInfo.time}분\n        </Text>\n      </TextContainer>\n      <BarContainer className=\"nana\" style={{ marginBottom: 0 }}>\n        {renderEachSubwayBar(total, runTime)}\n      </BarContainer>\n      <BarContainer style={{ marginTop: 0 }} />\n    </Card>\n  );\n};\n\nexport default SubwayCard;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { fontSize } from \"../Styles/_mixin\";\nimport { Container } from \"./common\";\nimport TaxiCard from \"./TaxiCard\";\nimport SubwayCard from \"./SubwayCard\";\n// import BusNSubwayCard from \"./BusNSubWayCard\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  width: 100%;\n  bottom: 0;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: white;\n  background: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nexport default class OptinList extends Component {\n  constructor(props) {\n    super(props);\n    const { taxi, sub, defaultSub, busNSub, bus } = this.props;\n\n    this.state = {\n      taxi,\n      sub,\n      bus,\n      busNSub,\n      defaultSub\n    };\n  }\n\n  // Render Bus and Subway Routes\n  renderBusNSubwayRoutes() {}\n\n  // Render All SubwayRoutes\n  renderSubwayRoutes() {\n    const { sub, defaultSub } = this.state;\n    const { routes, walkInfo } = sub;\n\n    if (routes[0].runTime.length) {\n      return routes.map((route, idx) => {\n        const { total, price, runTime } = route;\n        return (\n          <SubwayCard\n            key={idx}\n            defaultSub={defaultSub}\n            walkInfo={walkInfo}\n            total={total}\n            price={price}\n            runTime={runTime}\n          />\n        );\n      });\n    } else return null;\n  }\n\n  render() {\n    const { taxi } = this.state;\n    return (\n      <Container>\n        {this.renderSubwayRoutes()}\n        <TaxiCard taxi={taxi} />\n\n        <ButtonContainer>\n          <StyledButton size=\"large\" onClick={this.props.onButtonPress}>\n            목적지 재설정\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Statistic, Icon } from \"antd\";\nimport { fontSize, lineColors } from \"../Styles/_mixin\";\nimport { Text } from \"./common\";\nimport { lineChar } from \"../Styles/_mixin\";\n\nconst { Countdown } = Statistic;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  color: white;\n  flex: inherit;\n  max-height: 35vh;\n  background: #000033;\n`;\n\nconst LocContainer = styled.div`\n  display: flex;\n  flex: 1;\n  max-height: 1rem;\n`;\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex: 2;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Textcontainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst LineIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 3rem;\n  background: white;\n  margin-right: 1rem;\n`;\n\nconst LineInner = styled.div`\n  width: 2.4rem;\n  height: 2.4rem;\n  border-radius: 2.4rem;\n  background: ${props => lineColors[props.line]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n  color: white;\n  position: absolute;\n  right: 1rem;\n`;\n\nexport default class MakchaDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    const { defaultSub, addr } = props;\n    this.state = {\n      defaultSub,\n      remain: defaultSub.remain,\n      addr\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.defaultInfo !== this.props.defaultInfo ||\n      prevProps.addr !== this.props.addr\n    ) {\n      const { defaultSub, addr } = this.props;\n      this.setState({ defaultSub, addr, remain: defaultSub.remain });\n    }\n  }\n\n  onFinish() {\n    console.log(`Finished`);\n  }\n\n  renderDetail() {\n    const { defaultSub, remain, addr } = this.state;\n    const deadline = Date.now() + 1000 * remain;\n\n    if (remain) {\n      const {\n        startStationName,\n        line,\n        endStationName\n      } = defaultSub.pathStationList[0];\n\n      return (\n        <>\n          <LocContainer>\n            <Icon\n              type=\"environment\"\n              theme=\"filled\"\n              style={{ marginRight: \"1rem\" }}\n            />\n            <Text size=\"normalFontSize\">{addr}</Text>\n          </LocContainer>\n\n          <TimerContainer>\n            <>\n              <Textcontainer>\n                <Text size=\"largeFontSize\" weight=\"bold\" lineHeight=\"1.5rem\">\n                  막차까지\n                </Text>\n                <Text size=\"smallFontSize\">(현재 위치 기준)</Text>\n              </Textcontainer>\n              <Countdown\n                value={deadline}\n                onFinish={this.onFinish}\n                valueStyle={{\n                  color: \"white\",\n                  fontSize: fontSize.extraLargeFontSize\n                }}\n              />\n            </>\n          </TimerContainer>\n\n          <InfoContainer>\n            <LineIcon>\n              <LineInner line={line}>{lineChar[line]}</LineInner>\n            </LineIcon>\n            <Text size=\"largeFontSize\" weight=\"bold\">\n              {startStationName + \"역\"}\n            </Text>\n            <Text size=\"smallFontSize\" style={{ marginLeft: \"0.6rem\" }}>\n              {endStationName + \" 방향\"}\n            </Text>\n\n            <StyledButton\n              type=\"ghost\"\n              shape=\"round\"\n              onClick={() => window.alert(\"준비 중입니다\")}\n            >\n              알림 받기\n            </StyledButton>\n          </InfoContainer>\n        </>\n      );\n    } else return null;\n  }\n\n  render() {\n    return <Container>{this.renderDetail()}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Spin, Icon, Button } from \"antd\";\nimport OptinList from \"./OptinList\";\nimport MakchaDetail from \"./MakchaDetail\";\nimport { Text, Container } from \"./common\";\nimport { makchaApi, dataHandler } from \"../api\";\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex: 5;\n  justify-content: center;\n  & .anticon-spin {\n    position: absolute;\n    top: 3rem;\n  }\n`;\n\nconst MakchaContainer = styled.div`\n  display: flex;\n  flex: 2;\n`;\n\nconst SpinContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  height: 80%;\n  color: #000033;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: white;\n  background: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n`;\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentPos: { startX: null, startY: null } };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loc\")) {\n      const { endX, endY } = JSON.parse(\n        localStorage.getItem(\"loc\")\n      ).endLocation;\n      this.setState({ currentPos: { ...this.state.currentPos, endX, endY } });\n    }\n\n    navigator.geolocation.getCurrentPosition(pos => {\n      const { latitude, longitude } = pos.coords;\n      this.setState({\n        currentPos: {\n          ...this.state.currentPos,\n          startX: longitude,\n          startY: latitude\n        }\n      });\n      // this.getData(latitude, longitude);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.currentPos.startX !== this.state.currentPos.startX) {\n      const { startX, startY } = this.state.currentPos;\n      this.getCurrentPosFromGPS(startX, startY);\n      this.getData(startY, startX);\n    }\n  }\n\n  getData(startY, startX) {\n    const { endX, endY } = this.state.currentPos;\n    console.log(\"success\");\n\n    makchaApi.getData({ startX, startY, endX, endY }).then(res => {\n      console.log(res);\n      const { bus, busNSub, defaultSub, sub, taxi } = dataHandler(res.data);\n      this.setState({\n        bus,\n        busNSub,\n        defaultSub,\n        sub,\n        taxi\n      });\n    });\n  }\n\n  getCurrentPosFromGPS(startX, startY) {\n    makchaApi.getPosFromGPS(startX, startY).then(res => {\n      this.setState({\n        currentPos: {\n          ...this.state.currentPos,\n          addr: res.data.documents[0].address.address_name,\n          startX,\n          startY\n        }\n      });\n    });\n  }\n\n  onButtonPress() {\n    localStorage.setItem(\"loc\", \"\");\n    this.props.toggleComponent();\n  }\n\n  renderMain() {\n    const { currentPos, bus, sub, busNSub, taxi, defaultSub } = this.state;\n    if (defaultSub) {\n      return (\n        <>\n          <MakchaContainer>\n            <MakchaDetail defaultSub={defaultSub} addr={currentPos.addr} />\n          </MakchaContainer>\n          <ContentContainer>\n            <OptinList\n              taxi={taxi}\n              sub={sub}\n              defaultSub={defaultSub}\n              bus={bus}\n              busNSub={busNSub}\n              onButtonPress={this.onButtonPress.bind(this)}\n            />\n          </ContentContainer>\n        </>\n      );\n    } else\n      return (\n        <SpinContainer>\n          <Spin indicator={antIcon} />\n          <Text size=\"largeFontSize\">경로를 탐색 중입니다...</Text>\n          <StyledButton onClick={this.onButtonPress.bind(this)}>\n            목적지 다시 입력하기\n          </StyledButton>\n        </SpinContainer>\n      );\n  }\n\n  render() {\n    // console.log(this.props, this.state);\n    // const { taxiInfo, subwayPathOptionList, defaultInfo } = this.state.data;\n    // const { currentPos, bus, sub, busNSub, taxi, defaultSub } = this.state;\n    return <Container>{this.renderMain()}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport AddressForm from \"../Components/AddressForm\";\nimport Main from \"../Components/Main\";\nimport { Container } from \"../Components/common\";\n\nclass Landing extends Component {\n  state = {\n    component: \"form\"\n  };\n\n  componentDidMount() {\n    const addr = localStorage.getItem(\"loc\");\n    if (addr) this.setState({ component: \"main\" });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) console.log(this.props);\n  }\n\n  toggleComponent() {\n    const { component } = this.state;\n    if (component === \"form\") this.setState({ component: \"main\" });\n    else this.setState({ component: \"form\" });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.component === \"form\" ? (\n          <AddressForm toggleComponent={this.toggleComponent.bind(this)} />\n        ) : (\n          <Main toggleComponent={this.toggleComponent.bind(this)} />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GlobalStyle } from \"./Styles/global_styles\";\nimport Landing from \"./Routes/Landing\";\n\nconst AppContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <AppContainer className=\"app\">\n          <Route exact path=\"/\" component={Landing} />\n        </AppContainer>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// const makchaCache = \"makcha-1.0.1\";\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n    // // Create and open makchaCache\n    // window.addEventListener(\"install\", e => {\n    //   console.log(`sw install`);\n    //   e.waitUntil(caches.open(makchaCache).add(\"/index.html\"));\n    // });\n\n    // // Clear outdated cache\n    // window.addEventListener(\"activate\", e => {\n    //   let cacheCleaned = caches.keys().then(keys => {\n    //     keys.forEach(key => {\n    //       if (key !== makchaCache) return caches.delete(key);\n    //     });\n    //   });\n    //   e.waitUntil(cacheCleaned);\n    // });\n\n    // // SW fetch handler\n    // window.addEventListener(\"fetch\", e => {\n    //   // Cache with Network Fallback\n    //   let res = caches.match(e.request).then(res => {\n    //     // Check cache has response\n    //     if (res) return res;\n\n    //     // Fallback to Network\n    //     return fetch(e.request).then(fetchRes => {\n    //       // Cache fetched response\n    //       caches\n    //         .open(makchaCache)\n    //         .then(cache => cache.put(e.request, fetchRes));\n\n    //       // Return clone of fethced response\n    //       return fetchRes.clone();\n    //     });\n    //   });\n\n    //   // Respond\n    //   e.respondWith(res);\n    // });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}