{"version":3,"sources":["config/keys.js","Styles/global_styles.js","api.js","Styles/_mixin.js","Components/AddressForm.jsx","Components/OptinList.jsx","Components/common/index.js","Components/MakchaDetail.jsx","Components/Main.jsx","Routes/Landing.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","KakaoAK","GlobalStyle","createGlobalStyle","_templateObject","reset","api","axios","create","baseURL","kakaoApi","headers","Authorization","concat","keys","makchaApi","getData","_ref","startX","startY","endX","endY","get","getPosFromGPS","x","y","getPosFromAddr","addr","getPosFromKeyword","keyword","sizes","fontSize","smallFontSize","normalFontSize","largeFontSize","extraLargeFontSize","lineColors","도보","1","2","3","4","5","6","7","8","9","kyeongkang","kyung","chun","kong","bun","서해선","suin","sinbun","yongin","우이신설경전철","경전철의정부","in","in2","customMediaQuery","maxWidth","Item","Form","Container","styled","div","AddressForm_templateObject","StyledForm","_templateObject2","StyledItem","_templateObject3","StyledInput","Input","_templateObject4","ButtonContainer","_templateObject5","StyledButton","Button","_templateObject6","AddressForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","getPos","address","this","searchVal","Promise","race","resolve","then","res","data","documents","length","result","endLocation","address_name","localStorage","setItem","JSON","stringify","toggleComponent","_this$props$form","getFieldDecorator","getFieldError","addressError","isFieldTouched","react_default","a","createElement","validateStatus","help","rules","required","message","placeholder","type","onClick","Component","name","OptinList_templateObject","Card","OptinList_templateObject2","BarContainer","OptinList_templateObject3","Bar","OptinList_templateObject4","TextContainer","OptinList_templateObject5","Text","p","OptinList_templateObject6","_templateObject7","_templateObject8","OptinList","Object","classCallCheck","_this$props","possibleConstructorReturn","getPrototypeOf","call","taxiInfo","subwayPathOptionList","defaultInfo","state","subwayRoutes","total","runTime","walkInfo","time","_this$props$data","getRouteInfo","setState","_this2","routeList","_loop","idx","_this2$state$subwayPa","Number","pathStationList","distance","price","runTimeArr","line","cum","map","item","parseInt","slice","push","reduce","_this$state$subwayRou","Math","floor","String","className","key","uuidv1","style","width","backgroundColor","color","_this$state","_this$state$subwayRou2","OptinList_Container","weight","toFixed","lastTime","marginBottom","renderBar","marginTop","OptinList_ButtonContainer","OptinList_StyledButton","size","onButtonPress","common_templateObject","lineChar","Countdown","Statistic","MakchaDetail_templateObject","LocContainer","MakchaDetail_templateObject2","TimerContainer","MakchaDetail_templateObject3","InfoContainer","MakchaDetail_templateObject4","LineIcon","MakchaDetail_templateObject5","LineInner","MakchaDetail_templateObject6","MakchaDetail_templateObject7","MakchaDetail","remain","prevProps","prevState","deadline","Date","now","_defaultInfo$pathStat","startStationName","endStationName","Fragment","icon","theme","marginRight","common_Text","value","onFinish","valueStyle","marginLeft","MakchaDetail_StyledButton","shape","window","alert","MakchaDetail_Container","renderDetail","Main_templateObject","ContentContainer","Main_templateObject2","MakchaContainer","Main_templateObject3","SpinContainer","Main_templateObject4","Main_templateObject5","antIcon","spin","Main","currentAddr","getItem","_JSON$parse$endLocati","parse","navigator","geolocation","getCurrentPosition","pos","_pos$coords","coords","latitude","longitude","getCurrentPosFromGPS","_this3","_this$state2","objectSpread","_this4","_this$state$data","Main_Container","MakchaDetail_MakchaDetail","OptinList_OptinList","bind","indicator","Main_StyledButton","Landing_templateObject","Landing","component","Landing_Container","Components_AddressForm","Main_Main","AppContainer","App_templateObject","App","react_router_dom","react_router","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2d07e0f7.chunk.js","sourcesContent":["module.exports = {\n  KakaoAK: \"608b513f89e46075473ef312d8ea7a39\"\n};\n","import reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n${reset};\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.6/antd.min.css\");\n\n* {\n    box-sizing: border-box;\n}\n\nbody{\n  font-family: 'Nanum Gothic', sans-serif;\n}\n\n#root{\n  width: 100%;\n  height: 100%;\n}\n\na{\n  color: unset;\n  &:hover{\n    color: unset;\n  }\n}\n\nstrong{\n  font-weight: 700;\n}\n\nbutton{\n  cursor: pointer;\n  background-color: white;\n  outline: none;\n  border: none;\n  &:active {\n    outline: none;\n    border: none;\n  }\n}\n`;\n","import axios from \"axios\";\nimport keys from \"./config/keys\";\n\nconst api = axios.create({\n  baseURL: \"https://api.makkcha.com/\"\n});\n\nconst kakaoApi = axios.create({\n  baseURL: \"https://dapi.kakao.com/v2/local/\",\n  headers: { Authorization: `KakaoAK ${keys.KakaoAK}` }\n});\n\nexport const makchaApi = {\n  getData: ({ startX, startY, endX, endY }) =>\n    api.get(\n      `searchMakcha?startX=${startX}&startY=${startY}&endX=${endX}&endY=${endY}`\n    ),\n  getPosFromGPS: (x, y) =>\n    kakaoApi.get(`geo/coord2address.json?x=${x}&y=${y}&input_coord=WGS84`),\n  getPosFromAddr: addr => kakaoApi.get(`search/address.json?query=${addr}`),\n  getPosFromKeyword: keyword =>\n    kakaoApi.get(`search/keyword.json?query=${keyword}`)\n};\n","// sizes for media queries\nconst sizes = {\n  desktop: 922,\n  tablet: 768,\n  phone: 576\n};\n\nexport const fontSize = {\n  smallFontSize: \"0.7rem\",\n  normalFontSize: \"1rem\",\n  largeFontSize: \"1.2rem\",\n  extraLargeFontSize: \"3rem\"\n};\n\nexport const lineColors = {\n  도보: \"#ccc\",\n  \"1\": \"#052f93\",\n  \"2\": \"#10a643\",\n  \"3\": \"#ea8406\",\n  \"4\": \"#00a8e6\",\n  \"5\": \"#a95094\",\n  \"6\": \"#d08d1a\",\n  \"7\": \"#657931\",\n  \"8\": \"#e74e6d\",\n  \"9\": \"#be941c\",\n  kyeongkang: \"#004ea7\",\n  kyung: \"#79c0a0\",\n  chun: \"#33C7A7\",\n  kong: \"#038fa0\",\n  bun: \"#fcd204\",\n  서해선: \"#8be800\",\n  suin: \"#fbb901\",\n  sinbun: \"#cd2234\",\n  yongin: \"#56ab32\",\n  우이신설경전철: \"#b7b7b7\",\n  경전철의정부: \"#f6ba02\",\n  in: \"#6496df\",\n  in2: \"#fd9800\"\n};\n\nexport const headerHeight = \"3rem\";\n\nexport const color = { bgColor: \"#141414\", fontColor: \"#000\" };\n\nconst customMediaQuery = maxWidth => `@media (max-width: ${maxWidth}px)`;\n\nexport const media = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(sizes.desktop),\n  tablet: customMediaQuery(sizes.tablet),\n  phone: customMediaQuery(sizes.phone)\n};\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { makchaApi } from \"../api\";\nimport { fontSize } from \"../Styles/_mixin\";\n\nconst { Item } = Form;\n\nconst Container = styled.div`\n  background: #000033;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledItem = styled(Item)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 15rem;\n  border: none;\n  background: #000033;\n  text-align: center;\n  color: white;\n  border-bottom: 1px solid white;\n  &#address_address {\n    border-bottom: 1px solid white;\n  }\n  transition: none;\n  border-radius: 0;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  postion: absolute;\n  bottom: 0;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 2.6rem;\n  color: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nclass AddressForm extends Component {\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  getPos(searchVal) {\n    function posFromAddr() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromAddr(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    function posFromKeyword() {\n      return new Promise(resolve =>\n        makchaApi.getPosFromKeyword(searchVal).then(res => {\n          if (res.data.documents.length) resolve(res.data.documents);\n        })\n      );\n    }\n\n    Promise.race([posFromAddr(), posFromKeyword()])\n      .then(result => {\n        const endLocation = { endX: result[0].x, endY: result[0].y };\n        const addr = result[0].address_name;\n        localStorage.setItem(\"loc\", JSON.stringify({ endLocation, addr }));\n      })\n      .then(this.props.toggleComponent);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.getPos(values.address);\n      } else console.log(err);\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const addressError = isFieldTouched(\"address\") && getFieldError(\"address\");\n\n    return (\n      <Container>\n        <StyledForm>\n          <StyledItem\n            validateStatus={addressError ? \"error\" : \"\"}\n            help={addressError || \"\"}\n          >\n            {getFieldDecorator(\"address\", {\n              rules: [\n                { required: false, message: \"집 근처 역 이름을 입력해 주세요!\" }\n              ]\n            })(<StyledInput placeholder=\"집 주변 역 명 입력\" />)}\n          </StyledItem>\n        </StyledForm>\n        <ButtonContainer>\n          <StyledButton type=\"secondary\" onClick={this.handleSubmit}>\n            확인\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Form.create({ name: \"address\" })(AddressForm);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport uuidv1 from \"uuid/v1\";\nimport { lineColors, fontSize } from \"../Styles/_mixin\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Card = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst BarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n  width: 90%;\n  max-width: 90%;\n  height: 1rem;\n  background: sky-blue;\n  // &:first-child {\n  //   border-top-left-radius: 5px;\n  //   border-bottom-left-radius: 5px;\n  // }\n`;\n\nconst Bar = styled.div`\n  text-align: center;\n  height: 20px;\n  &:first-of-type {\n    border-top-left-radius: 3rem;\n    border-bottom-left-radius: 3rem;\n  }\n  &:last-of-type {\n    border-top-right-radius: 3rem;\n    border-bottom-right-radius: 3rem;\n  }\n`;\n\nconst TextContainer = styled.div`\n  width: 90%;\n  margin: 1rem 0;\n`;\n\nconst Text = styled.p`\n  margin: 0.5rem 0;\n  width: 90%;\n  font-weight: 700;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  width: 100%;\n  bottom: 0;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: white;\n  background: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n  font-size: ${fontSize.largeFontSize};\n`;\n\nexport default class OptinList extends Component {\n  constructor(props) {\n    super(props);\n    const { taxiInfo, subwayPathOptionList, defaultInfo } = this.props;\n    this.state = {\n      taxiInfo,\n      subwayPathOptionList,\n      defaultInfo,\n      subwayRoutes: [{ total: 0, runTime: [] }],\n      walkInfo: { time: 0 }\n    };\n  }\n\n  // // Json-server Option\n\n  componentDidMount() {\n    const { taxiInfo, subwayPathOptionList } = this.props.data;\n    const { walkInfo } = this.state.subwayPathOptionList;\n\n    this.getRouteInfo();\n\n    this.setState({ taxiInfo, subwayPathOptionList, walkInfo });\n  }\n\n  getRouteInfo() {\n    const { routeList } = this.state.subwayPathOptionList;\n    const subwayRoutes = [];\n    const { walkInfo } = this.state.subwayPathOptionList;\n    for (let idx = 0; idx < routeList.length; idx++) {\n      console.log(walkInfo.time);\n      let {\n        pathStationList,\n        distance,\n        price\n      } = this.state.subwayPathOptionList.routeList[Number(idx)];\n      let runTimeArr = [{ line: \"도보\", time: walkInfo.time * 60 }];\n      // store sum of runTime for each line\n      let cum = 0;\n      pathStationList.map(item => {\n        let time = item.runTime;\n        let line = item.line;\n        if (time !== null) {\n          time = parseInt(time.slice(0, 2)) * 60 + parseInt(time.slice(3));\n          cum += time;\n        } else {\n          runTimeArr.push({ line, time: cum });\n          cum = 0;\n        }\n      });\n      runTimeArr.push({\n        line: pathStationList[pathStationList.length - 1].line,\n        time: cum\n      });\n\n      // Object.keys(runTimeObj).forEach(key => (total += runTimeObj[key]));\n      let total = runTimeArr.reduce((a, x) => {\n        return a + x.time;\n      }, 0);\n      total += walkInfo.time;\n\n      subwayRoutes.push({ runTime: runTimeArr, total, distance, price });\n    }\n    this.setState({ subwayRoutes });\n  }\n\n  renderBar() {\n    // Hard Coded idx\n    let idx = 0;\n    const { total, runTime } = this.state.subwayRoutes[idx];\n    return runTime.map(item => {\n      let length = Math.floor((Number(item.time) / total) * 100);\n      if (length < 24) length = 24;\n      length = String(length) + \"%\";\n      return (\n        <Bar\n          className=\"haha\"\n          key={uuidv1()}\n          style={{\n            width: length,\n            backgroundColor: lineColors[item.line],\n            color: \"white\"\n          }}\n        >\n          {item.line === \"도보\" ? \"도보\" : null}\n          {Math.floor(Number(item.time) / 60)}분\n        </Bar>\n      );\n    });\n  }\n\n  render() {\n    const { taxiInfo, defaultInfo, walkInfo } = this.state;\n    const { total, distance, price } = this.state.subwayRoutes[0];\n    return (\n      <Container>\n        <Card>\n          <TextContainer>\n            <Text>지하철 {Math.floor(total / 60)}분</Text>\n            <p weight=\"normal\">\n              {(distance / 1000).toFixed(1)}km |{\" \"}\n              {String(Math.floor(price / 1000)) + \",\" + String(price % 1000)}원\n              | 막차 {defaultInfo.lastTime.slice(0, 5)} | 도보 {walkInfo.time}분\n            </p>\n          </TextContainer>\n          <BarContainer className=\"nana\" style={{ marginBottom: 0 }}>\n            {this.renderBar()}\n          </BarContainer>\n          <BarContainer style={{ marginTop: 0 }} />\n        </Card>\n\n        <Card>\n          <TextContainer>\n            <Text>택시 {taxiInfo.time}분</Text>\n            <p>\n              {(taxiInfo.distance / 1000).toFixed(1)}km | 약{\" \"}\n              {String(Math.floor(taxiInfo.price / 1000)) +\n                \",\" +\n                String(taxiInfo.price % 1000)}\n              원\n            </p>\n          </TextContainer>\n          <BarContainer>\n            <Bar\n              style={{\n                width: \"100%\",\n                backgroundColor: \"#ffd300\",\n                color: \"white\"\n              }}\n            >\n              {taxiInfo.time}분\n            </Bar>\n          </BarContainer>\n        </Card>\n        <ButtonContainer>\n          <StyledButton size=\"large\" onClick={this.props.onButtonPress}>\n            목적지 재설정\n          </StyledButton>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n","import styled from \"styled-components\";\nimport { fontSize } from \"../../Styles/_mixin\";\n\nexport const Text = styled.p`\n  font-size: ${props => fontSize[props.size] || fontSize.normalFontSize};\n  font-weight: ${props => props.weight};\n`;\n\nexport const lineChar = {\n  \"1\": \"1\",\n  \"2\": \"2\",\n  \"3\": \"3\",\n  \"4\": \"4\",\n  \"5\": \"5\",\n  \"6\": \"6\",\n  \"7\": \"7\",\n  \"8\": \"8\",\n  \"9\": \"9\",\n  kyeongkang: \"경강\",\n  kyung: \"중앙\",\n  chun: \"경춘\",\n  kong: \"공항\",\n  bun: \"분\",\n  서해선: \"서해\",\n  suin: \"수인\",\n  sinbun: \"신분\",\n  yongin: \"용인\",\n  우이신설경전철: \"우이\",\n  경전철의정부: \"의정\",\n  in: \"인1\",\n  in2: \"인2\"\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Statistic, Icon } from \"antd\";\nimport { fontSize, lineColors } from \"../Styles/_mixin\";\nimport { lineChar, Text } from \"./common\";\n\nconst { Countdown } = Statistic;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  color: white;\n  flex: inherit;\n  max-height: 35vh;\n  background: #000033;\n`;\n\nconst LocContainer = styled.div`\n  display: flex;\n  flex: 1;\n  max-height: 1rem;\n`;\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex: 2;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst LineIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 3rem;\n  background: white;\n  margin-right: 1rem;\n`;\n\nconst LineInner = styled.div`\n  width: 2.4rem;\n  height: 2.4rem;\n  border-radius: 2.4rem;\n  background: ${props => lineColors[props.line]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n  color: white;\n  position: absolute;\n  right: 1rem;\n`;\n\nexport default class MakchaDetail extends Component {\n  constructor(props) {\n    super(props);\n    const { defaultInfo, addr } = props;\n    this.state = {\n      defaultInfo,\n      remain: defaultInfo.remain || 0,\n      addr\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.defaultInfo !== this.props.defaultInfo ||\n      prevProps.addr !== this.props.addr\n    ) {\n      const { defaultInfo, addr } = this.props;\n      this.setState({ defaultInfo, addr, remain: defaultInfo.remain });\n    }\n  }\n\n  onFinish() {\n    console.log(`Finished`);\n  }\n\n  renderDetail() {\n    const { defaultInfo, remain, addr } = this.state;\n    const deadline = Date.now() + 1000 * remain;\n\n    if (remain) {\n      const {\n        startStationName,\n        line,\n        endStationName\n      } = defaultInfo.pathStationList[0];\n\n      return (\n        <>\n          <LocContainer>\n            <Icon\n              type=\"environment\"\n              theme=\"filled\"\n              style={{ marginRight: \"1rem\" }}\n            />\n            <Text size=\"normalFontSize\">{addr}</Text>\n          </LocContainer>\n\n          <TimerContainer>\n            <>\n              <Text size=\"largeFontSize\" weight=\"bold\">\n                막차까지\n              </Text>\n              <Countdown\n                value={deadline}\n                onFinish={this.onFinish}\n                valueStyle={{\n                  color: \"white\",\n                  fontSize: fontSize.extraLargeFontSize\n                }}\n              />\n            </>\n          </TimerContainer>\n\n          <InfoContainer>\n            <LineIcon>\n              <LineInner line={line}>{lineChar[line]}</LineInner>\n            </LineIcon>\n            <Text size=\"largeFontSize\" weight=\"bold\">\n              {startStationName + \"역\"}\n            </Text>\n            <Text size=\"smallFontSize\" style={{ marginLeft: \"0.6rem\" }}>\n              {endStationName + \" 방향\"}\n            </Text>\n\n            <StyledButton\n              type=\"ghost\"\n              shape=\"round\"\n              onClick={() => window.alert(\"알림을 설정했습니다\")}\n            >\n              알림 받기\n            </StyledButton>\n          </InfoContainer>\n        </>\n      );\n    } else return null;\n  }\n\n  render() {\n    return <Container>{this.renderDetail()}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Spin, Icon, Button } from \"antd\";\nimport OptinList from \"./OptinList\";\nimport MakchaDetail from \"./MakchaDetail\";\nimport { Text } from \"./common\";\nimport { makchaApi } from \"../api\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex: 5;\n  justify-content: center;\n  & .anticon-spin {\n    position: absolute;\n    top: 3rem;\n  }\n`;\n\nconst MakchaContainer = styled.div`\n  display: flex;\n  flex: 2;\n  // max-height: 10rem;\n`;\n\nconst SpinContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  height: 80%;\n  color: #000033;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 90%;\n  height: 3rem;\n  color: white;\n  background: #000033;\n  border-radius: 1.5rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n`;\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endX: 126.91509963231,\n      endY: 37.568565387939,\n      currentAddr: \"확인중...\",\n      startX: \"\",\n      startY: \"\",\n      data: {\n        taxiInfo: {},\n        subwayPathOptionList: { routeList: [] },\n        defaultInfo: {}\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loc\")) {\n      const { endX, endY } = JSON.parse(\n        localStorage.getItem(\"loc\")\n      ).endLocation;\n      this.setState({ endX, endY });\n    }\n    // // Json-server Option\n    // this.getTrainData(0, 0);\n\n    // Original\n    navigator.geolocation.getCurrentPosition(pos => {\n      const { latitude, longitude } = pos.coords;\n      this.setState({ startX: longitude, startY: latitude });\n      this.getData(latitude, longitude);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.startX !== this.state.startX) {\n      const { startX, startY } = this.state;\n      this.getData(startY, startX);\n      this.getCurrentPosFromGPS(startX, startY);\n    }\n  }\n\n  getData(startY, startX) {\n    const { endX, endY } = this.state;\n\n    makchaApi.getData({ startX, startY, endX, endY }).then(res =>\n      this.setState({\n        data: {\n          ...res.data,\n          defaultInfo: res.data.subwayPathOptionList.routeList[0] || {}\n        }\n      })\n    );\n  }\n\n  getCurrentPosFromGPS(x, y) {\n    makchaApi.getPosFromGPS(x, y).then(res => {\n      this.setState({\n        currentAddr: res.data.documents[0].address.address_name\n      });\n    });\n  }\n\n  onButtonPress() {\n    localStorage.setItem(\"loc\", \"\");\n    this.props.toggleComponent();\n  }\n\n  render() {\n    const { taxiInfo, subwayPathOptionList, defaultInfo } = this.state.data;\n    const { currentAddr } = this.state;\n    return (\n      <Container>\n        <MakchaContainer>\n          <MakchaDetail defaultInfo={defaultInfo} addr={currentAddr} />\n        </MakchaContainer>\n        <ContentContainer>\n          {subwayPathOptionList.routeList.length ? (\n            <OptinList\n              taxiInfo={taxiInfo}\n              subwayPathOptionList={subwayPathOptionList}\n              defaultInfo={subwayPathOptionList.routeList[0]}\n              data={this.state.data}\n              onButtonPress={this.onButtonPress.bind(this)}\n            />\n          ) : (\n            <SpinContainer>\n              <Spin indicator={antIcon} />\n              <Text size=\"largeFontSize\">경로를 탐색 중입니다...</Text>\n              <StyledButton onClick={this.onButtonPress.bind(this)}>\n                목적지 다시 입력하기\n              </StyledButton>\n            </SpinContainer>\n          )}\n        </ContentContainer>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AddressForm from \"../Components/AddressForm\";\nimport styled from \"styled-components\";\nimport Main from \"../Components/Main\";\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nclass Landing extends Component {\n  state = {\n    component: \"form\"\n  };\n\n  componentDidMount() {\n    const addr = localStorage.getItem(\"loc\");\n    if (addr) this.setState({ component: \"main\" });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) console.log(this.props);\n  }\n\n  toggleComponent() {\n    const { component } = this.state;\n    if (component === \"form\") this.setState({ component: \"main\" });\n    else this.setState({ component: \"form\" });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.component === \"form\" ? (\n          <AddressForm toggleComponent={this.toggleComponent.bind(this)} />\n        ) : (\n          <Main toggleComponent={this.toggleComponent.bind(this)} />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GlobalStyle } from \"./Styles/global_styles\";\nimport Landing from \"./Routes/Landing\";\n\nconst AppContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <AppContainer className=\"app\">\n          <Route exact path=\"/\" component={Landing} />\n        </AppContainer>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}