{"version":3,"sources":["Styles/global_styles.js","Components/AddressForm.jsx","Components/FloatContent.jsx","Components/ImageContent.jsx","Components/Main.jsx","Routes/Landing.jsx","App.jsx","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","reset","Item","Form","Container","styled","div","AddressForm_templateObject","StyledForm","_templateObject2","StyledItem","_templateObject3","StyledInput","Input","_templateObject4","StyledButton","Button","_templateObject5","AddressForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","getLocationByStationName","address","this","StationName","serviceKey","process","axios","get","concat","data","_this$props$form","getFieldDecorator","getFieldError","addressError","isFieldTouched","react_default","a","createElement","validateStatus","help","rules","required","message","placeholder","size","type","onClick","Component","create","name","FloatContent_templateObject","Line","FloatContent_templateObject2","FloatContent","FloatContent_Container","ImageContent_templateObject","FlexBox","ImageContent_templateObject2","HeaderText","h1","ImageContent_templateObject3","SubText","p","ImageContent_templateObject4","ImageContent","ImageContent_Container","Main_templateObject","IconContainer","Main_templateObject2","ContentContainer","Main_templateObject3","Main","Main_Container","Components_ImageContent","Components_FloatContent","Landing_templateObject","Landing","state","component","localStorage","getItem","setState","prevProps","prevState","Landing_Container","Components_AddressForm","toggleComponent","bind","Components_Main","AppContainer","App_templateObject","App","Fragment","react_router_dom","className","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d52ff2d1.chunk.js","sourcesContent":["import reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n${reset};\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.6/antd.min.css\");\n\n* {\n    box-sizing: border-box;\n}\n\nbody{\n  font-family: 'Nanum Gothic', sans-serif;\n}\n\n#root{\n  width: 100%;\n  height: 100%;\n}\n\na{\n  color: unset;\n  &:hover{\n    color: unset;\n  }\n}\n\nstrong{\n  font-weight: 700;\n}\n\nbutton{\n  cursor: pointer;\n  background-color: white;\n  outline: none;\n  border: none;\n  &:active {\n    outline: none;\n    border: none;\n  }\n}\n`;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst { Item } = Form;\n\nconst Container = styled.div`\n  background: #000;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledItem = styled(Item)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 11;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 15rem;\n  border: none;\n  background: #000;\n  text-align: center;\n  color: white;\n  border-bottom: 1px solid white;\n  border-radius: 0;\n`;\n\nconst StyledButton = styled(Button)`\n  flex: 1;\n  width: 90%;\n  border-radius: 0.7rem;\n  margin-bottom: 1.3rem;\n  backgrouncolor: #000;\n  font-weight: bold;\n`;\n\nclass AddressForm extends Component {\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  async getLocationByStationName(StationName) {\n    const serviceKey = process.env.serviceKey;\n    const data = await axios.get(\n      `http://ws.bus.go.kr/api/rest/pathinfo/getLocationInfo?serviceKey=${serviceKey}&stSrch=${StationName}`\n    );\n    console.log(data);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        // localStorage.setItem(\"addr\", values.address);\n        // this.props.toggleComponent();\n        this.getLocationByStationName(values.address);\n      } else console.log(err);\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const addressError = isFieldTouched(\"address\") && getFieldError(\"address\");\n\n    return (\n      <Container>\n        <StyledForm>\n          <StyledItem\n            validateStatus={addressError ? \"error\" : \"\"}\n            help={addressError || \"\"}\n          >\n            {getFieldDecorator(\"address\", {\n              rules: [{ required: false, message: \"집 주소를 입력해 주세요!\" }]\n            })(<StyledInput placeholder=\"집에서 가까운 지하철역 입력\" />)}\n          </StyledItem>\n\n          <StyledButton\n            size=\"large\"\n            type=\"secondary\"\n            onClick={this.handleSubmit}\n          >\n            확인\n          </StyledButton>\n        </StyledForm>\n      </Container>\n    );\n  }\n}\n\nexport default Form.create({ name: \"address\" })(AddressForm);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  border-radius: 0.5rem;\n  border: 1px solid #eee;\n  width: 94%;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Line = styled.div`\n  border-bottom: 2px solid #bbb;\n  height: 1rem;\n  width: 60%;\n`;\n\nconst FloatContent = () => (\n  <Container>\n    <Line />\n  </Container>\n);\n\nexport default FloatContent;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 4;\n  background: #000;\n`;\n\nconst FlexBox = styled.div`\n  flex: 1;\n  margin: 1.2rem;\n`;\n\nconst HeaderText = styled.h1`\n  color: #fff;\n  font-weight: bold;\n  font-size: 4rem;\n`;\n\nconst SubText = styled.p`\n  font-size: 0.8rem;\n  text-align: right;\n  line-height: 1rem;\n  color: #fff;\n`;\n\nconst ImageContent = () => (\n  <Container>\n    <FlexBox>\n      <HeaderText>밤길</HeaderText>\n    </FlexBox>\n    <FlexBox />\n    <FlexBox>\n      <SubText>시계가 반대로 돌아가고 있어</SubText>\n      <SubText>- 류동훈</SubText>\n    </FlexBox>\n  </Container>\n);\n\nexport default ImageContent;\n","import React from \"react\";\nimport styled from \"styled-components\";\n// import { Button } from \"antd\";\nimport FloatContent from \"./FloatContent\";\nimport ImageContent from \"./ImageContent\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst IconContainer = styled.div`\n  flex: 1;\n  // border: 1px solid #000;\n`;\n\nconst ContentContainer = styled.div`\n  flex: 5;\n  display: flex;\n  justify-content: center;\n`;\n\n// const clearStorage = props => {\n//   localStorage.setItem(\"addr\", \"\");\n//   props.toggleComponent();\n// };\n\nconst Main = props => (\n  <Container>\n    <ImageContent />\n    <IconContainer />\n    <ContentContainer>\n      <FloatContent />\n    </ContentContainer>\n  </Container>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport AddressForm from \"../Components/AddressForm\";\nimport styled from \"styled-components\";\nimport Main from \"../Components/Main\";\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nclass Landing extends Component {\n  state = {\n    component: \"form\"\n  };\n\n  componentDidMount() {\n    const addr = localStorage.getItem(\"addr\");\n    if (addr) this.setState({ component: \"main\" });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) console.log(this.props);\n  }\n\n  toggleComponent() {\n    const { component } = this.state;\n    if (component === \"form\") this.setState({ component: \"main\" });\n    else this.setState({ component: \"form\" });\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <Container>\n        {this.state.component === \"form\" ? (\n          <AddressForm toggleComponent={this.toggleComponent.bind(this)} />\n        ) : (\n          <Main toggleComponent={this.toggleComponent.bind(this)} />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GlobalStyle } from \"./Styles/global_styles\";\nimport Landing from \"./Routes/Landing\";\n\nconst AppContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <AppContainer className=\"app\">\n          <Route exact path=\"/\" component={Landing} />\n        </AppContainer>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}